window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"pangolin": {"fullname": "pangolin", "modulename": "pangolin", "kind": "module", "doc": "<p>Main interface to pangolin. Broadly speaking, there are the following classes of functions:</p>\n\n<ul>\n<li><code>makerv</code> will either cast its input to a constant RV or (if it is already an RV) leave it alone\n(TODO: This is bad)</li>\n<li>Functions to create new RVs with given distributions: <code>normal</code>, <code>exponential</code>,\n<code>multi_normal</code>, <code>dirichlet</code>, etc.</li>\n<li>Functions to apply deterministic transformations to other RVs: <code>exp</code>, <code>sin</code>, <code>pow</code>, <code>matmul</code>, etc.</li>\n<li>Program transforms: <code>vmap</code></li>\n</ul>\n"}, "pangolin.vmap": {"fullname": "pangolin.vmap", "modulename": "pangolin", "qualname": "vmap", "kind": "function", "doc": "<p>@public\nvmap a function. See also the documentation for\n<a href=\"https://jax.readthedocs.io/en/latest/_autosummary/jax.vmap.html\"><code>jax.vmap</code></a> which has exactly the same\ninterface (with some extra arguments not supported here).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>f</strong> (Callable):\nThe function to vmap. Should take a pytree of <code>RV</code>s as inputs and return a pytree of <code>RV</code>s\nas outputs.</li>\n<li><strong>in_axes:</strong>: An integer, None, or sequence of values specifying what input axes to map over. If\nthe positional arguments to <code>f</code> are container (pytree) types then <code>in_axes</code> must be a\nsequence with length equal to the number of positional arguments to <code>f</code> and each element\nof <code>in_axes</code> must be a container tree prefix of the corresponding positional argument.</li>\n<li><strong>axis_size</strong> (int | None):\nAn integer indicating the size of the axis to be mapped. This is optional unless all\nleaves of <code>in_axes</code> are <code>None</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>vec_f</strong>: batched/vectorized version of <code>f</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">in_axes</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.index": {"fullname": "pangolin.index", "modulename": "pangolin", "qualname": "index", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">var</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span> <span class=\"o\">|</span> <span class=\"nb\">slice</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference": {"fullname": "pangolin.inference", "modulename": "pangolin.inference", "kind": "module", "doc": "<p></p>\n"}, "pangolin.inference.inference_util": {"fullname": "pangolin.inference.inference_util", "modulename": "pangolin.inference.inference_util", "kind": "module", "doc": "<p></p>\n"}, "pangolin.inference.inference_util.Calculate": {"fullname": "pangolin.inference.inference_util.Calculate", "modulename": "pangolin.inference.inference_util", "qualname": "Calculate", "kind": "class", "doc": "<p></p>\n"}, "pangolin.inference.inference_util.Calculate.__init__": {"fullname": "pangolin.inference.inference_util.Calculate.__init__", "modulename": "pangolin.inference.inference_util", "qualname": "Calculate.__init__", "kind": "function", "doc": "<p>Create a <code>Calculate</code> object.</p>\n\n<p>Inputs:</p>\n\n<ul>\n<li><code>flat</code>: function that can perform flat sampling</li>\n<li><code>**options</code>: options to \"freeze\" in</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sample_flat</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">frozen_options</span></span>)</span>"}, "pangolin.inference.inference_util.Calculate.sample_flat": {"fullname": "pangolin.inference.inference_util.Calculate.sample_flat", "modulename": "pangolin.inference.inference_util", "qualname": "Calculate.sample_flat", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.inference.inference_util.Calculate.frozen_options": {"fullname": "pangolin.inference.inference_util.Calculate.frozen_options", "modulename": "pangolin.inference.inference_util", "qualname": "Calculate.frozen_options", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.inference.inference_util.Calculate.sample": {"fullname": "pangolin.inference.inference_util.Calculate.sample", "modulename": "pangolin.inference.inference_util", "qualname": "Calculate.sample", "kind": "function", "doc": "<p>Draw samples!</p>\n\n<p>Inputs:</p>\n\n<ul>\n<li><code>vars</code>: a pytree of <code>RV</code>s to sample. (Can be any pytree)</li>\n<li><code>given_vars</code>: a pytree of <code>RV</code>s to condition on. <code>None</code> is no conditioning\nvariables. (\nCan be any pytree)</li>\n<li><code>given_vals</code>: a pytree of observed values. (Pytree must match <code>given_vars</code>.)</li>\n<li><code>reduce_fn</code> (optional) will apply a function to the samples for each <code>RV</code> in\n<code>vars</code> before returning samples. (This is used to define <code>E</code>, <code>var</code>, etc.\nbelow.)</li>\n</ul>\n\n<p>Outputs:</p>\n\n<ul>\n<li>A <code>pytree</code> of <code>RV</code>s matching <code>vars</code> with one extra dimension, containing\nthe samples.</li>\n</ul>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"c1\"># returns something close to 1.0</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">vars</span>,</span><span class=\"param\">\t<span class=\"n\">given_vars</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">given_vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduce_fn</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference.inference_util.Calculate.E": {"fullname": "pangolin.inference.inference_util.Calculate.E", "modulename": "pangolin.inference.inference_util", "qualname": "Calculate.E", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">vars</span>, </span><span class=\"param\"><span class=\"n\">given_vars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">given_vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference.inference_util.Calculate.var": {"fullname": "pangolin.inference.inference_util.Calculate.var", "modulename": "pangolin.inference.inference_util", "qualname": "Calculate.var", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">vars</span>, </span><span class=\"param\"><span class=\"n\">given_vars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">given_vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference.inference_util.Calculate.std": {"fullname": "pangolin.inference.inference_util.Calculate.std", "modulename": "pangolin.inference.inference_util", "qualname": "Calculate.std", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">vars</span>, </span><span class=\"param\"><span class=\"n\">given_vars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">given_vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference.numpyro": {"fullname": "pangolin.inference.numpyro", "modulename": "pangolin.inference.numpyro", "kind": "module", "doc": "<p></p>\n"}, "pangolin.inference.numpyro.sample": {"fullname": "pangolin.inference.numpyro.sample", "modulename": "pangolin.inference.numpyro", "qualname": "sample", "kind": "function", "doc": "<p>Draw samples!</p>\n\n<p>Inputs:</p>\n\n<ul>\n<li><code>vars</code>: a pytree of <code>RV</code>s to sample. (Can be any pytree)</li>\n<li><code>given_vars</code>: a pytree of <code>RV</code>s to condition on. <code>None</code> is no conditioning\nvariables. (\nCan be any pytree)</li>\n<li><code>given_vals</code>: a pytree of observed values. (Pytree must match <code>given_vars</code>.)</li>\n<li><code>reduce_fn</code> (optional) will apply a function to the samples for each <code>RV</code> in\n<code>vars</code> before returning samples. (This is used to define <code>E</code>, <code>var</code>, etc.\nbelow.)</li>\n</ul>\n\n<p>Outputs:</p>\n\n<ul>\n<li>A <code>pytree</code> of <code>RV</code>s matching <code>vars</code> with one extra dimension, containing\nthe samples.</li>\n</ul>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"c1\"># returns something close to 1.0</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">vars</span>, </span><span class=\"param\"><span class=\"n\">given_vars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">given_vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reduce_fn</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference.numpyro.sample_flat": {"fullname": "pangolin.inference.numpyro.sample_flat", "modulename": "pangolin.inference.numpyro", "qualname": "sample_flat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">vars</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">given</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">vals</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Buffer</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">complex</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">niter</span><span class=\"o\">=</span><span class=\"mi\">10000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference.numpyro.E": {"fullname": "pangolin.inference.numpyro.E", "modulename": "pangolin.inference.numpyro", "qualname": "E", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">vars</span>, </span><span class=\"param\"><span class=\"n\">given_vars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">given_vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference.numpyro.var": {"fullname": "pangolin.inference.numpyro.var", "modulename": "pangolin.inference.numpyro", "qualname": "var", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">vars</span>, </span><span class=\"param\"><span class=\"n\">given_vars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">given_vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.inference.numpyro.std": {"fullname": "pangolin.inference.numpyro.std", "modulename": "pangolin.inference.numpyro", "qualname": "std", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">vars</span>, </span><span class=\"param\"><span class=\"n\">given_vars</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">given_vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface": {"fullname": "pangolin.interface", "modulename": "pangolin.interface", "kind": "module", "doc": "<p></p>\n"}, "pangolin.interface.vmap": {"fullname": "pangolin.interface.vmap", "modulename": "pangolin.interface.vmap", "kind": "module", "doc": "<p></p>\n"}, "pangolin.interface.composite": {"fullname": "pangolin.interface.composite", "modulename": "pangolin.interface.composite", "kind": "module", "doc": "<p></p>\n"}, "pangolin.interface.autoregressive": {"fullname": "pangolin.interface.autoregressive", "modulename": "pangolin.interface.autoregressive", "kind": "module", "doc": "<p></p>\n"}, "pangolin.interface.Loop": {"fullname": "pangolin.interface.Loop", "modulename": "pangolin.interface", "qualname": "Loop", "kind": "class", "doc": "<p>A Loop is a simple context manager that remembers what Loops have been created in what order.</p>\n"}, "pangolin.interface.Loop.__init__": {"fullname": "pangolin.interface.Loop.__init__", "modulename": "pangolin.interface", "qualname": "Loop.__init__", "kind": "function", "doc": "<p>Create a new Loop.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>length</strong> (int | None):\nthe length for the loop (optional\u2014can be None if loop length can be inferred from shapes)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pangolin.interface.Loop.loops": {"fullname": "pangolin.interface.Loop.loops", "modulename": "pangolin.interface", "qualname": "Loop.loops", "kind": "variable", "doc": "<p>list of all Loops currently active as context managers.</p>\n", "annotation": ": List[Self]", "default_value": "[]"}, "pangolin.interface.Loop.length": {"fullname": "pangolin.interface.Loop.length", "modulename": "pangolin.interface", "qualname": "Loop.length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None"}, "pangolin.interface.slot": {"fullname": "pangolin.interface.slot", "modulename": "pangolin.interface", "qualname": "slot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.print_upstream": {"fullname": "pangolin.interface.print_upstream", "modulename": "pangolin.interface", "qualname": "print_upstream", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"nb\">vars</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.OperatorRV": {"fullname": "pangolin.interface.OperatorRV", "modulename": "pangolin.interface", "qualname": "OperatorRV", "kind": "class", "doc": "<p>A RV is essentially just a tuple of an Op and a set of parent RVs.</p>\n", "bases": "pangolin.ir.rv.RV"}, "pangolin.interface.OperatorRV.__init__": {"fullname": "pangolin.interface.OperatorRV.__init__", "modulename": "pangolin.interface", "qualname": "OperatorRV.__init__", "kind": "function", "doc": "<p>Initialize an RV with Op <code>op</code> and parents <code>*parents</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">op</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">parents</span></span>)</span>"}, "pangolin.interface.OperatorRV.n": {"fullname": "pangolin.interface.OperatorRV.n", "modulename": "pangolin.interface", "qualname": "OperatorRV.n", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, "pangolin.interface.makerv": {"fullname": "pangolin.interface.makerv", "modulename": "pangolin.interface", "qualname": "makerv", "kind": "function", "doc": "<p>In principle this is just a function that does nothing if the input is OperatorRV and creates a\nnew OperatorRV(Constant(...)) if it's something that can be cast to a numpy array. This\nfunction is called by all the standard functions (<code>add</code>, <code>normal</code>, etc.) so that users can\ndirectly pass constants.</p>\n\n<p>This behavior, however, should be programmable, in case someone would like to use some other\nclass of <code>RV</code> (which must be a subclass of <code>OperatorRV</code>). So we create a list <code>makerv_funs</code> that\noutside code can (presumably temporarily) stuck a new function on top of.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.normal": {"fullname": "pangolin.interface.normal", "modulename": "pangolin.interface", "qualname": "normal", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Normal_distribution\">normal</a> distributed random\nvariable.</p>\n\n<p><strong>Note:</strong> The second parameter is the <em>scale</em> / standard deviation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loc</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Buffer</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">complex</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Buffer</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">complex</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.normal_prec": {"fullname": "pangolin.interface.normal_prec", "modulename": "pangolin.interface", "qualname": "normal_prec", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Normal_distribution\">normal</a> distributed random\nvariable.</p>\n\n<p><strong>Note:</strong> The second parameter is the <em>precision</em> / inverse variance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loc</span>, </span><span class=\"param\"><span class=\"n\">prec</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.log_normal": {"fullname": "pangolin.interface.log_normal", "modulename": "pangolin.interface", "qualname": "log_normal", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Log-normal_distribution\">log-normal</a> distributed random\nvariable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mu</span>, </span><span class=\"param\"><span class=\"n\">sigma</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.cauchy": {"fullname": "pangolin.interface.cauchy", "modulename": "pangolin.interface", "qualname": "cauchy", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Cauchy_distribution\">Cauchy</a> distributed random\nvariable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loc</span>, </span><span class=\"param\"><span class=\"n\">scale</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.bernoulli": {"fullname": "pangolin.interface.bernoulli", "modulename": "pangolin.interface", "qualname": "bernoulli", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Bernoulli_distribution\">Bernoulli</a> distributed random\nvariable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>theta</strong>: the mean. must be between 0 and 1</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">theta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.bernoulli_logit": {"fullname": "pangolin.interface.bernoulli_logit", "modulename": "pangolin.interface", "qualname": "bernoulli_logit", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Bernoulli_distribution\">Bernoulli</a> distributed random\nvariable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong>: any real number. determines the mean as mean = <code>sigmoid(alpha)</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.binomial": {"fullname": "pangolin.interface.binomial", "modulename": "pangolin.interface", "qualname": "binomial", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Binomial_distribution\">binomial</a> distributed random\nvariable. Call as <code>binomial(n,p)</code>, where <code>n</code> is the number of repetions and <code>p</code> is the\nprobability of success for each repetition.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">p</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.uniform": {"fullname": "pangolin.interface.uniform", "modulename": "pangolin.interface", "qualname": "uniform", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Continuous_uniform_distribution\">uniformly</a>\ndistributed random variable. <code>low</code> must be less than <code>high</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">low</span>, </span><span class=\"param\"><span class=\"n\">high</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.beta": {"fullname": "pangolin.interface.beta", "modulename": "pangolin.interface", "qualname": "beta", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Beta_distribution\">beta</a> distributed random variable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">beta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.beta_binomial": {"fullname": "pangolin.interface.beta_binomial", "modulename": "pangolin.interface", "qualname": "beta_binomial", "kind": "function", "doc": "<p>Create a\n<a href=\"https://en.wikipedia.org/wiki/Beta-binomial_distribution\">beta-binomial</a>\ndistributed random variable.</p>\n\n<p><strong>Note</strong>: This follows the (n,alpha,beta) convention of\n<a href=\"https://mc-stan.org/docs/2_19/functions-reference/beta-binomial-distribution.html\">stan</a>\n(and Wikipedia). Some other systems (e.g.\n<a href=\"https://num.pyro.ai/en/stable/distributions.html#betabinomial\">numpyro</a>)\nuse alternate variable orderings. This is no problem for you as a user\u2014pangolin does the\nre-ordering for you if you call the numpyro backend. But keep it in mind if translating a\nmodel from one system to another.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">beta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.exponential": {"fullname": "pangolin.interface.exponential", "modulename": "pangolin.interface", "qualname": "exponential", "kind": "function", "doc": "<p>Create an <a href=\"https://en.wikipedia.org/wiki/Exponential_distribution\">exponential</a> distributed\nrandom variable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">scale</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.gamma": {"fullname": "pangolin.interface.gamma", "modulename": "pangolin.interface", "qualname": "gamma", "kind": "function", "doc": "<p>Create an <a href=\"https://en.wikipedia.org/wiki/Gamma_distribution\">gamma</a> distributed\nrandom variable.</p>\n\n<p><strong>Note:</strong> We (like <a href=\"https://mc-stan.org/docs/2_21/functions-reference/gamma\n-distribution.html\">stan</a>) follow the \"shape/rate\" parameterization, <em>not</em> the \"shape/scale\"\nparameterization.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">beta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.poisson": {"fullname": "pangolin.interface.poisson", "modulename": "pangolin.interface", "qualname": "poisson", "kind": "function", "doc": "<p>Create an <a href=\"https://en.wikipedia.org/wiki/Poisson_distribution\">poisson</a> distributed\nrandom variable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rate</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.student_t": {"fullname": "pangolin.interface.student_t", "modulename": "pangolin.interface", "qualname": "student_t", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Student's_t-distribution#Location-scale_t_distribution\">location-scale student-t</a>\ndistributed random variable. Call as <code>student_t(nu,loc,scale)</code>, where <code>nu</code> is the rate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nu</span>, </span><span class=\"param\"><span class=\"n\">loc</span>, </span><span class=\"param\"><span class=\"n\">scale</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.add": {"fullname": "pangolin.interface.add", "modulename": "pangolin.interface", "qualname": "add", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.sub": {"fullname": "pangolin.interface.sub", "modulename": "pangolin.interface", "qualname": "sub", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.mul": {"fullname": "pangolin.interface.mul", "modulename": "pangolin.interface", "qualname": "mul", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.div": {"fullname": "pangolin.interface.div", "modulename": "pangolin.interface", "qualname": "div", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.pow": {"fullname": "pangolin.interface.pow", "modulename": "pangolin.interface", "qualname": "pow", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.sqrt": {"fullname": "pangolin.interface.sqrt", "modulename": "pangolin.interface", "qualname": "sqrt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.abs": {"fullname": "pangolin.interface.abs", "modulename": "pangolin.interface", "qualname": "abs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.arccos": {"fullname": "pangolin.interface.arccos", "modulename": "pangolin.interface", "qualname": "arccos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.arccosh": {"fullname": "pangolin.interface.arccosh", "modulename": "pangolin.interface", "qualname": "arccosh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.arcsin": {"fullname": "pangolin.interface.arcsin", "modulename": "pangolin.interface", "qualname": "arcsin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.arcsinh": {"fullname": "pangolin.interface.arcsinh", "modulename": "pangolin.interface", "qualname": "arcsinh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.arctan": {"fullname": "pangolin.interface.arctan", "modulename": "pangolin.interface", "qualname": "arctan", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.arctanh": {"fullname": "pangolin.interface.arctanh", "modulename": "pangolin.interface", "qualname": "arctanh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.cos": {"fullname": "pangolin.interface.cos", "modulename": "pangolin.interface", "qualname": "cos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.cosh": {"fullname": "pangolin.interface.cosh", "modulename": "pangolin.interface", "qualname": "cosh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.exp": {"fullname": "pangolin.interface.exp", "modulename": "pangolin.interface", "qualname": "exp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.inv_logit": {"fullname": "pangolin.interface.inv_logit", "modulename": "pangolin.interface", "qualname": "inv_logit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.expit": {"fullname": "pangolin.interface.expit", "modulename": "pangolin.interface", "qualname": "expit", "kind": "function", "doc": "<p>Equivalent to <code>inv_logit</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.sigmoid": {"fullname": "pangolin.interface.sigmoid", "modulename": "pangolin.interface", "qualname": "sigmoid", "kind": "function", "doc": "<p>Equivalent to <code>inv_logit</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.log": {"fullname": "pangolin.interface.log", "modulename": "pangolin.interface", "qualname": "log", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.log_gamma": {"fullname": "pangolin.interface.log_gamma", "modulename": "pangolin.interface", "qualname": "log_gamma", "kind": "function", "doc": "<p>Log gamma function.</p>\n\n<p><strong>TODO</strong>: do we want\n<a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.loggamma.html\"><code>scipy.special.loggamma</code></a>\nor\n<a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.gammaln.html\"><code>scipy.special.gammaln</code></a>?\nThese are different!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.logit": {"fullname": "pangolin.interface.logit", "modulename": "pangolin.interface", "qualname": "logit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.sin": {"fullname": "pangolin.interface.sin", "modulename": "pangolin.interface", "qualname": "sin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.sinh": {"fullname": "pangolin.interface.sinh", "modulename": "pangolin.interface", "qualname": "sinh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.step": {"fullname": "pangolin.interface.step", "modulename": "pangolin.interface", "qualname": "step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.tan": {"fullname": "pangolin.interface.tan", "modulename": "pangolin.interface", "qualname": "tan", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.tanh": {"fullname": "pangolin.interface.tanh", "modulename": "pangolin.interface", "qualname": "tanh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.multi_normal": {"fullname": "pangolin.interface.multi_normal", "modulename": "pangolin.interface", "qualname": "multi_normal", "kind": "function", "doc": "<p>Create a multivariate normal distributed random variable. Call as <code>multi_normal(mean,cov)</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mean</span>, </span><span class=\"param\"><span class=\"n\">cov</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.categorical": {"fullname": "pangolin.interface.categorical", "modulename": "pangolin.interface", "qualname": "categorical", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Categorical_distribution\">categorical</a>-distributed\nwhere <code>theta</code> is a vector of non-negative reals that sums to one.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">theta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.multinomial": {"fullname": "pangolin.interface.multinomial", "modulename": "pangolin.interface", "qualname": "multinomial", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Multinomial_distribution\">multinomial</a>-distributed\nrandom variable. Call as <code>multinomial(n,p)</code> where <code>n</code> is the number of repetitions and <code>p</code> is a\nvector of probabilities that sums to one.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">p</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.dirichlet": {"fullname": "pangolin.interface.dirichlet", "modulename": "pangolin.interface", "qualname": "dirichlet", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Dirichlet_distribution\">Dirichlet</a>-distributed\nrandom variable. Call as <code>dirichlet(alpha)</code> where <code>alpha</code> is a 1-D vector of positive reals.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.matmul": {"fullname": "pangolin.interface.matmul", "modulename": "pangolin.interface", "qualname": "matmul", "kind": "function", "doc": "<p>Matrix product of two arrays. The behavior follows that of\n<a href=\"https://numpy.org/doc/stable/reference/generated/numpy.matmul.html\"><code>numpy.matmul</code></a>\nexcept that (currently) <code>a</code> and <code>b</code> must both be 1-D or 2-D arrays. In particular:</p>\n\n<ul>\n<li>If <code>a</code> and <code>b</code> are both 1-D then this represents an inner-product.</li>\n<li>If <code>a</code> is 1-D and <code>b</code> is 2-D then this represents vector/matrix multiplication</li>\n<li>If <code>a</code> is 2-D and <code>b</code> is 1-D then this represents matrix/vector multiplication</li>\n<li>If <code>a</code> and <code>b</code> are both 2-D then this represents matrix/matrix multiplication</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.inv": {"fullname": "pangolin.interface.inv", "modulename": "pangolin.interface", "qualname": "inv", "kind": "function", "doc": "<p>Take the inverse of a matrix. Input must be a 2-D square (invertible) array.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.softmax": {"fullname": "pangolin.interface.softmax", "modulename": "pangolin.interface", "qualname": "softmax", "kind": "function", "doc": "<p>Take <a href=\"https://en.wikipedia.org/wiki/Softmax_function\">softmax</a> function. (TODO: conform to\nsyntax of <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.softmax.html\">scipy.special.softmax</a>)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>a</strong>: 1-D vector</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.sum": {"fullname": "pangolin.interface.sum", "modulename": "pangolin.interface", "qualname": "sum", "kind": "function", "doc": "<p>Take the sum of a random variable along a given axis</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>: an RV (or something that can be cast to a Constant RV)</li>\n<li><strong>axis</strong>: a non-negative integer (cannot be a random variable)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.autoregressive.autoregressive_flat": {"fullname": "pangolin.interface.autoregressive.autoregressive_flat", "modulename": "pangolin.interface.autoregressive", "qualname": "autoregressive_flat", "kind": "function", "doc": "<p>next = flat_fun(prev,*args)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">flat_fun</span>, </span><span class=\"param\"><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">in_axes</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.autoregressive.autoregressive": {"fullname": "pangolin.interface.autoregressive.autoregressive", "modulename": "pangolin.interface.autoregressive", "qualname": "autoregressive", "kind": "function", "doc": "<p>next = flat_fun(prev,*args)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fun</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>, </span><span class=\"param\"><span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">in_axes</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.autoregressive.repeat": {"fullname": "pangolin.interface.autoregressive.repeat", "modulename": "pangolin.interface.autoregressive", "qualname": "repeat", "kind": "function", "doc": "<p>Simple decorator to create functions to create autoregressive RVs</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>@auto(length=10)\ndef fun(last):\n    return normal(last,1)\nx = fun(0)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">in_axes</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.composite.make_composite": {"fullname": "pangolin.interface.composite.make_composite", "modulename": "pangolin.interface.composite", "qualname": "make_composite", "kind": "function", "doc": "<p>Inputs:</p>\n\n<ul>\n<li>fun: A function that takes RVs as inputs and returns a single RV</li>\n<li>*input_shapes: shapes for each explicit input to fun\nOutputs:</li>\n<li>op: a Composite op representing the function</li>\n<li>consts: a list of constants that fun captures as a closure\nThe final op expects as inputs <em>first</em> all the explicit inputs and then all the elements of consts</li>\n</ul>\n\n<p>Fun should not examine ops of its inputs.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fun</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">input_shapes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.composite.composite_flat": {"fullname": "pangolin.interface.composite.composite_flat", "modulename": "pangolin.interface.composite", "qualname": "composite_flat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fun</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.composite.composite": {"fullname": "pangolin.interface.composite.composite", "modulename": "pangolin.interface.composite", "qualname": "composite", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fun</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface": {"fullname": "pangolin.interface.interface", "modulename": "pangolin.interface.interface", "kind": "module", "doc": "<p>This package defines a special subtype of RV that supports operator overloading</p>\n"}, "pangolin.interface.interface.RV_or_array": {"fullname": "pangolin.interface.interface.RV_or_array", "modulename": "pangolin.interface.interface", "qualname": "RV_or_array", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Union[collections.abc.Buffer, numpy._typing._array_like._SupportsArray[numpy.dtype[typing.Any]], numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[typing.Any]]], bool, int, float, complex, str, bytes, numpy._typing._nested_sequence._NestedSequence[bool | int | float | complex | str | bytes], pangolin.ir.rv.RV]"}, "pangolin.interface.interface.for_api": {"fullname": "pangolin.interface.interface.for_api", "modulename": "pangolin.interface.interface", "qualname": "for_api", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;makerv&#x27;, &#x27;normal&#x27;, &#x27;normal_prec&#x27;, &#x27;log_normal&#x27;, &#x27;cauchy&#x27;, &#x27;bernoulli&#x27;, &#x27;bernoulli_logit&#x27;, &#x27;binomial&#x27;, &#x27;uniform&#x27;, &#x27;beta&#x27;, &#x27;beta_binomial&#x27;, &#x27;exponential&#x27;, &#x27;gamma&#x27;, &#x27;poisson&#x27;, &#x27;student_t&#x27;, &#x27;add&#x27;, &#x27;sub&#x27;, &#x27;mul&#x27;, &#x27;div&#x27;, &#x27;pow&#x27;, &#x27;sqrt&#x27;, &#x27;abs&#x27;, &#x27;arccos&#x27;, &#x27;arccosh&#x27;, &#x27;arcsin&#x27;, &#x27;arcsinh&#x27;, &#x27;arctan&#x27;, &#x27;arctanh&#x27;, &#x27;cos&#x27;, &#x27;cosh&#x27;, &#x27;exp&#x27;, &#x27;inv_logit&#x27;, &#x27;expit&#x27;, &#x27;sigmoid&#x27;, &#x27;log&#x27;, &#x27;log_gamma&#x27;, &#x27;logit&#x27;, &#x27;sin&#x27;, &#x27;sinh&#x27;, &#x27;step&#x27;, &#x27;tan&#x27;, &#x27;tanh&#x27;, &#x27;multi_normal&#x27;, &#x27;categorical&#x27;, &#x27;multinomial&#x27;, &#x27;dirichlet&#x27;, &#x27;matmul&#x27;, &#x27;inv&#x27;, &#x27;softmax&#x27;, &#x27;sum&#x27;, &#x27;vmap&#x27;]"}, "pangolin.interface.interface.api": {"fullname": "pangolin.interface.interface.api", "modulename": "pangolin.interface.interface", "qualname": "api", "kind": "function", "doc": "<p>Decorator to include function in global API</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fun</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.OperatorRV": {"fullname": "pangolin.interface.interface.OperatorRV", "modulename": "pangolin.interface.interface", "qualname": "OperatorRV", "kind": "class", "doc": "<p>A RV is essentially just a tuple of an Op and a set of parent RVs.</p>\n", "bases": "pangolin.ir.rv.RV"}, "pangolin.interface.interface.OperatorRV.__init__": {"fullname": "pangolin.interface.interface.OperatorRV.__init__", "modulename": "pangolin.interface.interface", "qualname": "OperatorRV.__init__", "kind": "function", "doc": "<p>Initialize an RV with Op <code>op</code> and parents <code>*parents</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">op</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">parents</span></span>)</span>"}, "pangolin.interface.interface.OperatorRV.n": {"fullname": "pangolin.interface.interface.OperatorRV.n", "modulename": "pangolin.interface.interface", "qualname": "OperatorRV.n", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, "pangolin.interface.interface.rv_factory": {"fullname": "pangolin.interface.interface.rv_factory", "modulename": "pangolin.interface.interface", "qualname": "rv_factory", "kind": "function", "doc": "<p>Given an op and some args, create an OperatorRV. By default, this just calls <code>OperatorRV</code>.\nBut this can be overridden if you'd like to mess with subclasses by putting a new function\non the <code>rv_factories</code> list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">op</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.rv_factories": {"fullname": "pangolin.interface.interface.rv_factories", "modulename": "pangolin.interface.interface", "qualname": "rv_factories", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;class &#x27;pangolin.interface.interface.OperatorRV&#x27;&gt;]"}, "pangolin.interface.interface.SetRVFactory": {"fullname": "pangolin.interface.interface.SetRVFactory", "modulename": "pangolin.interface.interface", "qualname": "SetRVFactory", "kind": "class", "doc": "<p></p>\n"}, "pangolin.interface.interface.SetRVFactory.__init__": {"fullname": "pangolin.interface.interface.SetRVFactory.__init__", "modulename": "pangolin.interface.interface", "qualname": "SetRVFactory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rv_factory</span></span>)</span>"}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"fullname": "pangolin.interface.interface.SetRVFactory.rv_factory", "modulename": "pangolin.interface.interface", "qualname": "SetRVFactory.rv_factory", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.interface.interface.non_operator_rv": {"fullname": "pangolin.interface.interface.non_operator_rv", "modulename": "pangolin.interface.interface", "qualname": "non_operator_rv", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.makerv": {"fullname": "pangolin.interface.interface.makerv", "modulename": "pangolin.interface.interface", "qualname": "makerv", "kind": "function", "doc": "<p>In principle this is just a function that does nothing if the input is OperatorRV and creates a\nnew OperatorRV(Constant(...)) if it's something that can be cast to a numpy array. This\nfunction is called by all the standard functions (<code>add</code>, <code>normal</code>, etc.) so that users can\ndirectly pass constants.</p>\n\n<p>This behavior, however, should be programmable, in case someone would like to use some other\nclass of <code>RV</code> (which must be a subclass of <code>OperatorRV</code>). So we create a list <code>makerv_funs</code> that\noutside code can (presumably temporarily) stuck a new function on top of.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.standard_makerv": {"fullname": "pangolin.interface.interface.standard_makerv", "modulename": "pangolin.interface.interface", "qualname": "standard_makerv", "kind": "function", "doc": "<p>The \"standard\" makerv function. If the input is <code>OperatorRV</code>, then it just returns it.\nOtherwise, creates a new <code>op=Constant(x)</code> and then creates an <code>OperatorRV</code> using\n<code>current_rv_factory()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.makerv_funs": {"fullname": "pangolin.interface.interface.makerv_funs", "modulename": "pangolin.interface.interface", "qualname": "makerv_funs", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;function standard_makerv&gt;]"}, "pangolin.interface.interface.create_rv": {"fullname": "pangolin.interface.interface.create_rv", "modulename": "pangolin.interface.interface", "qualname": "create_rv", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">op</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.normal": {"fullname": "pangolin.interface.interface.normal", "modulename": "pangolin.interface.interface", "qualname": "normal", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Normal_distribution\">normal</a> distributed random\nvariable.</p>\n\n<p><strong>Note:</strong> The second parameter is the <em>scale</em> / standard deviation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loc</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Buffer</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">complex</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Buffer</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_array_like</span><span class=\"o\">.</span><span class=\"n\">_SupportsArray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">_typing</span><span class=\"o\">.</span><span class=\"n\">_nested_sequence</span><span class=\"o\">.</span><span class=\"n\">_NestedSequence</span><span class=\"p\">[</span><span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">complex</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.normal_prec": {"fullname": "pangolin.interface.interface.normal_prec", "modulename": "pangolin.interface.interface", "qualname": "normal_prec", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Normal_distribution\">normal</a> distributed random\nvariable.</p>\n\n<p><strong>Note:</strong> The second parameter is the <em>precision</em> / inverse variance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loc</span>, </span><span class=\"param\"><span class=\"n\">prec</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.log_normal": {"fullname": "pangolin.interface.interface.log_normal", "modulename": "pangolin.interface.interface", "qualname": "log_normal", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Log-normal_distribution\">log-normal</a> distributed random\nvariable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mu</span>, </span><span class=\"param\"><span class=\"n\">sigma</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.cauchy": {"fullname": "pangolin.interface.interface.cauchy", "modulename": "pangolin.interface.interface", "qualname": "cauchy", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Cauchy_distribution\">Cauchy</a> distributed random\nvariable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loc</span>, </span><span class=\"param\"><span class=\"n\">scale</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.bernoulli": {"fullname": "pangolin.interface.interface.bernoulli", "modulename": "pangolin.interface.interface", "qualname": "bernoulli", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Bernoulli_distribution\">Bernoulli</a> distributed random\nvariable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>theta</strong>: the mean. must be between 0 and 1</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">theta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.bernoulli_logit": {"fullname": "pangolin.interface.interface.bernoulli_logit", "modulename": "pangolin.interface.interface", "qualname": "bernoulli_logit", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Bernoulli_distribution\">Bernoulli</a> distributed random\nvariable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong>: any real number. determines the mean as mean = <code>sigmoid(alpha)</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.binomial": {"fullname": "pangolin.interface.interface.binomial", "modulename": "pangolin.interface.interface", "qualname": "binomial", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Binomial_distribution\">binomial</a> distributed random\nvariable. Call as <code>binomial(n,p)</code>, where <code>n</code> is the number of repetions and <code>p</code> is the\nprobability of success for each repetition.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">p</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.uniform": {"fullname": "pangolin.interface.interface.uniform", "modulename": "pangolin.interface.interface", "qualname": "uniform", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Continuous_uniform_distribution\">uniformly</a>\ndistributed random variable. <code>low</code> must be less than <code>high</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">low</span>, </span><span class=\"param\"><span class=\"n\">high</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.beta": {"fullname": "pangolin.interface.interface.beta", "modulename": "pangolin.interface.interface", "qualname": "beta", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Beta_distribution\">beta</a> distributed random variable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">beta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.beta_binomial": {"fullname": "pangolin.interface.interface.beta_binomial", "modulename": "pangolin.interface.interface", "qualname": "beta_binomial", "kind": "function", "doc": "<p>Create a\n<a href=\"https://en.wikipedia.org/wiki/Beta-binomial_distribution\">beta-binomial</a>\ndistributed random variable.</p>\n\n<p><strong>Note</strong>: This follows the (n,alpha,beta) convention of\n<a href=\"https://mc-stan.org/docs/2_19/functions-reference/beta-binomial-distribution.html\">stan</a>\n(and Wikipedia). Some other systems (e.g.\n<a href=\"https://num.pyro.ai/en/stable/distributions.html#betabinomial\">numpyro</a>)\nuse alternate variable orderings. This is no problem for you as a user\u2014pangolin does the\nre-ordering for you if you call the numpyro backend. But keep it in mind if translating a\nmodel from one system to another.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">beta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.exponential": {"fullname": "pangolin.interface.interface.exponential", "modulename": "pangolin.interface.interface", "qualname": "exponential", "kind": "function", "doc": "<p>Create an <a href=\"https://en.wikipedia.org/wiki/Exponential_distribution\">exponential</a> distributed\nrandom variable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">scale</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.gamma": {"fullname": "pangolin.interface.interface.gamma", "modulename": "pangolin.interface.interface", "qualname": "gamma", "kind": "function", "doc": "<p>Create an <a href=\"https://en.wikipedia.org/wiki/Gamma_distribution\">gamma</a> distributed\nrandom variable.</p>\n\n<p><strong>Note:</strong> We (like <a href=\"https://mc-stan.org/docs/2_21/functions-reference/gamma\n-distribution.html\">stan</a>) follow the \"shape/rate\" parameterization, <em>not</em> the \"shape/scale\"\nparameterization.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">beta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.poisson": {"fullname": "pangolin.interface.interface.poisson", "modulename": "pangolin.interface.interface", "qualname": "poisson", "kind": "function", "doc": "<p>Create an <a href=\"https://en.wikipedia.org/wiki/Poisson_distribution\">poisson</a> distributed\nrandom variable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rate</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.student_t": {"fullname": "pangolin.interface.interface.student_t", "modulename": "pangolin.interface.interface", "qualname": "student_t", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Student's_t-distribution#Location-scale_t_distribution\">location-scale student-t</a>\ndistributed random variable. Call as <code>student_t(nu,loc,scale)</code>, where <code>nu</code> is the rate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nu</span>, </span><span class=\"param\"><span class=\"n\">loc</span>, </span><span class=\"param\"><span class=\"n\">scale</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.implicit_vectorized_scalar_fun": {"fullname": "pangolin.interface.interface.implicit_vectorized_scalar_fun", "modulename": "pangolin.interface.interface", "qualname": "implicit_vectorized_scalar_fun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fun</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.add": {"fullname": "pangolin.interface.interface.add", "modulename": "pangolin.interface.interface", "qualname": "add", "kind": "function", "doc": "<p>Add two scalar random variables. Typically one would type <code>a+b</code> rather than <code>add(a,b)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.sub": {"fullname": "pangolin.interface.interface.sub", "modulename": "pangolin.interface.interface", "qualname": "sub", "kind": "function", "doc": "<p>Subtract two scalar random variables. Typically one would type <code>a-b</code> rather than <code>sub(a,\nb)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.mul": {"fullname": "pangolin.interface.interface.mul", "modulename": "pangolin.interface.interface", "qualname": "mul", "kind": "function", "doc": "<p>Multiply two scalar random variables. Typically one would type <code>a*b</code> rather than <code>mul(a,b)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.div": {"fullname": "pangolin.interface.interface.div", "modulename": "pangolin.interface.interface", "qualname": "div", "kind": "function", "doc": "<p>Divide two scalar random variables. Typically one would type <code>a/b</code> rather than <code>div(a,b)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.pow": {"fullname": "pangolin.interface.interface.pow", "modulename": "pangolin.interface.interface", "qualname": "pow", "kind": "function", "doc": "<p>Take one scalar to another scalar power. Typically one would type <code>a**b</code> rather than <code>pow(\na,b)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.sqrt": {"fullname": "pangolin.interface.interface.sqrt", "modulename": "pangolin.interface.interface", "qualname": "sqrt", "kind": "function", "doc": "<p>sqrt(x) is an alias for pow(x,0.5)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.abs": {"fullname": "pangolin.interface.interface.abs", "modulename": "pangolin.interface.interface", "qualname": "abs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.interface.arccos": {"fullname": "pangolin.interface.interface.arccos", "modulename": "pangolin.interface.interface", "qualname": "arccos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.arccosh": {"fullname": "pangolin.interface.interface.arccosh", "modulename": "pangolin.interface.interface", "qualname": "arccosh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.arcsin": {"fullname": "pangolin.interface.interface.arcsin", "modulename": "pangolin.interface.interface", "qualname": "arcsin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.arcsinh": {"fullname": "pangolin.interface.interface.arcsinh", "modulename": "pangolin.interface.interface", "qualname": "arcsinh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.arctan": {"fullname": "pangolin.interface.interface.arctan", "modulename": "pangolin.interface.interface", "qualname": "arctan", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.arctanh": {"fullname": "pangolin.interface.interface.arctanh", "modulename": "pangolin.interface.interface", "qualname": "arctanh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.cos": {"fullname": "pangolin.interface.interface.cos", "modulename": "pangolin.interface.interface", "qualname": "cos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.cosh": {"fullname": "pangolin.interface.interface.cosh", "modulename": "pangolin.interface.interface", "qualname": "cosh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.exp": {"fullname": "pangolin.interface.interface.exp", "modulename": "pangolin.interface.interface", "qualname": "exp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.inv_logit": {"fullname": "pangolin.interface.interface.inv_logit", "modulename": "pangolin.interface.interface", "qualname": "inv_logit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.expit": {"fullname": "pangolin.interface.interface.expit", "modulename": "pangolin.interface.interface", "qualname": "expit", "kind": "function", "doc": "<p>Equivalent to <code>inv_logit</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.sigmoid": {"fullname": "pangolin.interface.interface.sigmoid", "modulename": "pangolin.interface.interface", "qualname": "sigmoid", "kind": "function", "doc": "<p>Equivalent to <code>inv_logit</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.log": {"fullname": "pangolin.interface.interface.log", "modulename": "pangolin.interface.interface", "qualname": "log", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.log_gamma": {"fullname": "pangolin.interface.interface.log_gamma", "modulename": "pangolin.interface.interface", "qualname": "log_gamma", "kind": "function", "doc": "<p>Log gamma function.</p>\n\n<p><strong>TODO</strong>: do we want\n<a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.loggamma.html\"><code>scipy.special.loggamma</code></a>\nor\n<a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.gammaln.html\"><code>scipy.special.gammaln</code></a>?\nThese are different!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.logit": {"fullname": "pangolin.interface.interface.logit", "modulename": "pangolin.interface.interface", "qualname": "logit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.sin": {"fullname": "pangolin.interface.interface.sin", "modulename": "pangolin.interface.interface", "qualname": "sin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.sinh": {"fullname": "pangolin.interface.interface.sinh", "modulename": "pangolin.interface.interface", "qualname": "sinh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.step": {"fullname": "pangolin.interface.interface.step", "modulename": "pangolin.interface.interface", "qualname": "step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.tan": {"fullname": "pangolin.interface.interface.tan", "modulename": "pangolin.interface.interface", "qualname": "tan", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.tanh": {"fullname": "pangolin.interface.interface.tanh", "modulename": "pangolin.interface.interface", "qualname": "tanh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.multi_normal": {"fullname": "pangolin.interface.interface.multi_normal", "modulename": "pangolin.interface.interface", "qualname": "multi_normal", "kind": "function", "doc": "<p>Create a multivariate normal distributed random variable. Call as <code>multi_normal(mean,cov)</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mean</span>, </span><span class=\"param\"><span class=\"n\">cov</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.categorical": {"fullname": "pangolin.interface.interface.categorical", "modulename": "pangolin.interface.interface", "qualname": "categorical", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Categorical_distribution\">categorical</a>-distributed\nwhere <code>theta</code> is a vector of non-negative reals that sums to one.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">theta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.multinomial": {"fullname": "pangolin.interface.interface.multinomial", "modulename": "pangolin.interface.interface", "qualname": "multinomial", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Multinomial_distribution\">multinomial</a>-distributed\nrandom variable. Call as <code>multinomial(n,p)</code> where <code>n</code> is the number of repetitions and <code>p</code> is a\nvector of probabilities that sums to one.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">p</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.dirichlet": {"fullname": "pangolin.interface.interface.dirichlet", "modulename": "pangolin.interface.interface", "qualname": "dirichlet", "kind": "function", "doc": "<p>Create a <a href=\"https://en.wikipedia.org/wiki/Dirichlet_distribution\">Dirichlet</a>-distributed\nrandom variable. Call as <code>dirichlet(alpha)</code> where <code>alpha</code> is a 1-D vector of positive reals.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.matmul": {"fullname": "pangolin.interface.interface.matmul", "modulename": "pangolin.interface.interface", "qualname": "matmul", "kind": "function", "doc": "<p>Matrix product of two arrays. The behavior follows that of\n<a href=\"https://numpy.org/doc/stable/reference/generated/numpy.matmul.html\"><code>numpy.matmul</code></a>\nexcept that (currently) <code>a</code> and <code>b</code> must both be 1-D or 2-D arrays. In particular:</p>\n\n<ul>\n<li>If <code>a</code> and <code>b</code> are both 1-D then this represents an inner-product.</li>\n<li>If <code>a</code> is 1-D and <code>b</code> is 2-D then this represents vector/matrix multiplication</li>\n<li>If <code>a</code> is 2-D and <code>b</code> is 1-D then this represents matrix/vector multiplication</li>\n<li>If <code>a</code> and <code>b</code> are both 2-D then this represents matrix/matrix multiplication</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.inv": {"fullname": "pangolin.interface.interface.inv", "modulename": "pangolin.interface.interface", "qualname": "inv", "kind": "function", "doc": "<p>Take the inverse of a matrix. Input must be a 2-D square (invertible) array.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.softmax": {"fullname": "pangolin.interface.interface.softmax", "modulename": "pangolin.interface.interface", "qualname": "softmax", "kind": "function", "doc": "<p>Take <a href=\"https://en.wikipedia.org/wiki/Softmax_function\">softmax</a> function. (TODO: conform to\nsyntax of <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.softmax.html\">scipy.special.softmax</a>)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>a</strong>: 1-D vector</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.interface.sum": {"fullname": "pangolin.interface.interface.sum", "modulename": "pangolin.interface.interface", "qualname": "sum", "kind": "function", "doc": "<p>Take the sum of a random variable along a given axis</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>: an RV (or something that can be cast to a Constant RV)</li>\n<li><strong>axis</strong>: a non-negative integer (cannot be a random variable)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">OperatorRV</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.FlatCallable": {"fullname": "pangolin.interface.vmap.FlatCallable", "modulename": "pangolin.interface.vmap", "qualname": "FlatCallable", "kind": "variable", "doc": "<p></p>\n", "default_value": "collections.abc.Callable[..., list[pangolin.ir.rv.RV]]"}, "pangolin.interface.vmap.check_tree_consistency": {"fullname": "pangolin.interface.vmap.check_tree_consistency", "modulename": "pangolin.interface.vmap", "qualname": "check_tree_consistency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"fullname": "pangolin.interface.vmap.get_flat_vmap_args_and_axes", "modulename": "pangolin.interface.vmap", "qualname": "get_flat_vmap_args_and_axes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">in_axes</span>, </span><span class=\"param\"><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.vmap": {"fullname": "pangolin.interface.vmap.vmap", "modulename": "pangolin.interface.vmap", "qualname": "vmap", "kind": "function", "doc": "<p>@public\nvmap a function. See also the documentation for\n<a href=\"https://jax.readthedocs.io/en/latest/_autosummary/jax.vmap.html\"><code>jax.vmap</code></a> which has exactly the same\ninterface (with some extra arguments not supported here).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>f</strong> (Callable):\nThe function to vmap. Should take a pytree of <code>RV</code>s as inputs and return a pytree of <code>RV</code>s\nas outputs.</li>\n<li><strong>in_axes:</strong>: An integer, None, or sequence of values specifying what input axes to map over. If\nthe positional arguments to <code>f</code> are container (pytree) types then <code>in_axes</code> must be a\nsequence with length equal to the number of positional arguments to <code>f</code> and each element\nof <code>in_axes</code> must be a container tree prefix of the corresponding positional argument.</li>\n<li><strong>axis_size</strong> (int | None):\nAn integer indicating the size of the axis to be mapped. This is optional unless all\nleaves of <code>in_axes</code> are <code>None</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>vec_f</strong>: batched/vectorized version of <code>f</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">in_axes</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.convert_args": {"fullname": "pangolin.interface.vmap.convert_args", "modulename": "pangolin.interface.vmap", "qualname": "convert_args", "kind": "function", "doc": "<p>Given some set of (interdependent) RVs, get a new set where all are converted to a new type\nbut all inter-RV parent links are preserved.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rv_type</strong>: Some subclass of <code>RV</code></li>\n<li><strong>args</strong> (RV):\narguments, all of type RV</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_args</strong> (tuple[rv_type]):\nconverted args</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rv_type</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.generated_nodes": {"fullname": "pangolin.interface.vmap.generated_nodes", "modulename": "pangolin.interface.vmap", "qualname": "generated_nodes", "kind": "function", "doc": "<p>Given a \"flat\" function and some number of RV arguments, get all the nodes that the function\ncreates. This <em>includes</em> nodes that do not depend on the inputs.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fun</strong> (Callable[[Tuple[RV]], List[RV]]):\nA function that takes some number of <code>RV</code> arguments and returns a list of <code>RV</code>s</li>\n<li><strong>*args</strong> (RV):\narguments to call the function on.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>all_vars</strong> (List[RV]):\nAll <code>RV</code>s that are generated by this function and downstream of <code>args</code></li>\n<li><strong>out</strong> (List[RV]):\nThe outputs of the original function (typically overlaps with <code>all_vars</code>)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fun</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.generated_nodes_old": {"fullname": "pangolin.interface.vmap.generated_nodes_old", "modulename": "pangolin.interface.vmap", "qualname": "generated_nodes_old", "kind": "function", "doc": "<p>OLD VERSION, using tracing instead of node numbers</p>\n\n<p>Given a \"flat\" function and some number of RV arguments, get all the nodes that the function\ncreates. This <em>includes</em> nodes that do not depend on the inputs.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fun</strong> (Callable[[Tuple[RV]], List[RV]]):\nA function that takes some number of <code>RV</code> arguments and returns a list of <code>RV</code>s</li>\n<li><strong>*args</strong> (RV):\narguments to call the function on.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>all_vars</strong> (List[RV]):\nAll <code>RV</code>s that are generated by this function and downstream of <code>args</code></li>\n<li><strong>out</strong> (List[RV]):\nThe outputs of the original function (typically overlaps with <code>all_vars</code>)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fun</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.AbstractOp": {"fullname": "pangolin.interface.vmap.AbstractOp", "modulename": "pangolin.interface.vmap", "qualname": "AbstractOp", "kind": "class", "doc": "<p>An <code>AbstractOp</code> doesn't actually do anything and expects no parents. It just has a fixed shape.</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.interface.vmap.AbstractOp.__init__": {"fullname": "pangolin.interface.vmap.AbstractOp.__init__", "modulename": "pangolin.interface.vmap", "qualname": "AbstractOp.__init__", "kind": "function", "doc": "<p>Create an abstract Op.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shape</strong> (tuple[int]):\nthe shape for the output</li>\n<li><strong>random</strong> (bool):\nis the op random</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">random</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "pangolin.interface.vmap.AbstractOp.shape": {"fullname": "pangolin.interface.vmap.AbstractOp.shape", "modulename": "pangolin.interface.vmap", "qualname": "AbstractOp.shape", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.interface.vmap.vmap_dummy_args": {"fullname": "pangolin.interface.vmap.vmap_dummy_args", "modulename": "pangolin.interface.vmap", "qualname": "vmap_dummy_args", "kind": "function", "doc": "<p>Given a \"full\" arguments, get a list of dummy/sliced arguments</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>in_axes</strong> (tuple[int|None]):\nWhat axis to map each argument over. Should have same length as <code>args</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">in_axes</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.vmap_subgraph": {"fullname": "pangolin.interface.vmap.vmap_subgraph", "modulename": "pangolin.interface.vmap", "qualname": "vmap_subgraph", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>roots</strong>: \"real\" root RVs</li>\n<li><strong>dummy_roots</strong>: dummy root RVs (correspond to roots sliced according to <code>dummy_axes</code> and <code>axis_size</code>)</li>\n<li><strong>roots_axes</strong>: the axes along which dummy_roots have been sliced</li>\n<li><strong>axis_size</strong>: the axis size for all mapped nodes</li>\n<li><strong>dummy_nodes</strong>: sequence of RVs which may depend on each other</li>\n<li><strong>dummy_outputs</strong>: the desired outputs</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>real_outputs</strong>: real nodes corresponding to <code>dummy_outputs</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">roots</span>,</span><span class=\"param\">\t<span class=\"n\">dummy_roots</span>,</span><span class=\"param\">\t<span class=\"n\">roots_axes</span>,</span><span class=\"param\">\t<span class=\"n\">axis_size</span>,</span><span class=\"param\">\t<span class=\"n\">dummy_nodes</span>,</span><span class=\"param\">\t<span class=\"n\">dummy_outputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.vmap_eval": {"fullname": "pangolin.interface.vmap.vmap_eval", "modulename": "pangolin.interface.vmap", "qualname": "vmap_eval", "kind": "function", "doc": "<p>actually evaluate a vmap.\nThis function (but not vmap itself) works on \"flat\" function f, meaning that each\nargument of the function is just a RV. And the function must return\na list of arguments which again are each just a RV.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span>, </span><span class=\"param\"><span class=\"n\">in_axes</span>, </span><span class=\"param\"><span class=\"n\">axis_size</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.vmap_flat": {"fullname": "pangolin.interface.vmap.vmap_flat", "modulename": "pangolin.interface.vmap", "qualname": "vmap_flat", "kind": "function", "doc": "<p>vmap a flat function (one that takes some number of RV arguments and returns a list of RV\narguments)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">in_axes</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.interface.vmap.plate": {"fullname": "pangolin.interface.vmap.plate", "modulename": "pangolin.interface.vmap", "qualname": "plate", "kind": "function", "doc": "<p>Plate is a simple shortcut notation to vmap. For example</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">plate</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)(</span><span class=\"k\">lambda</span><span class=\"p\">:</span>\n    <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Is equivalent to</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">vmap</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"n\">axis_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)()</span>\n</code></pre>\n</div>\n\n<p>And</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">multi_normal</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">plate</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)(</span><span class=\"k\">lambda</span> <span class=\"n\">z_i</span><span class=\"p\">:</span>\n    <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">z_i</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Is equivalent to</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">multi_normal</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">vmap</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">z_i</span><span class=\"p\">:</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">z_i</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>And</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">multi_normal</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">plate</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">,</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">in_axes</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)(</span><span class=\"k\">lambda</span> <span class=\"n\">z_i</span><span class=\"p\">:</span>\n    <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">z_i</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Is equivalent to</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">multi_normal</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">vmap</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">z_i</span><span class=\"p\">:</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">z_i</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"n\">in_axes</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">axis_size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">in_axes</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.ir": {"fullname": "pangolin.ir", "modulename": "pangolin.ir", "kind": "module", "doc": "<p>The core IR of pangolin is essentially just <code>Op</code>s and <code>RV</code>s. Intuitively,</p>\n\n<ul>\n<li>An <code>Op</code> is a \"marker\" for a certain function or conditional distribution.</li>\n<li>An <code>RV</code> is a tuple of one <code>Op</code> and some number of parent <code>RV</code>s.</li>\n</ul>\n\n<p>There are different classes of <code>Op</code>s, for different types of functions. For example, <code>Constant</code>\nrepresents constant functions, and most standard scalar functions are in\n<code>pangolin.ir.scalar_ops</code>.</p>\n\n<p>While not explicitly listed below, all the scalar ops in <code>pangolin.ir.scalar_ops</code> are also\navailable here.</p>\n"}, "pangolin.ir.Op": {"fullname": "pangolin.ir.Op", "modulename": "pangolin.ir", "qualname": "Op", "kind": "class", "doc": "<p>Abstract base class for operators. An <code>Op</code> represents a deterministic function or conditional\ndistribution.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>An <code>Op</code> <em>only</em> represents an operator\u2014all functionality for sampling or density evaluation,\netc. is left to inference engines.</li>\n<li><code>Op</code>s must provide an <code>__eq__</code> method such that <em>mathematically equivalent</em> <code>Op</code>s are\nequal, regardless of if they occupy the same place in memory. For example, <code>d1 = Normal()</code>\nand <code>d2 = Normal()</code> then <code>d1 == d2</code>. This base class provides a default implementation that\nsimply tests if the types are the same. If an Op takes parameters (e.g. <code>VMap</code>), this should be\noverridden.</li>\n<li><code>Op</code>s are programmatically enforced to be frozen after initialization.</li>\n</ul>\n", "bases": "abc.ABC"}, "pangolin.ir.Op.__init__": {"fullname": "pangolin.ir.Op.__init__", "modulename": "pangolin.ir", "qualname": "Op.__init__", "kind": "function", "doc": "<p>Create a new op</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nname for the operator (used only for printing, not functionality)</li>\n<li><strong>random</strong> (bool):\nis this a conditional distribution? (<code>random=True</code>) or a deterministic function (\n<code>random=False</code>)?</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">random</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "pangolin.ir.Op.name": {"fullname": "pangolin.ir.Op.name", "modulename": "pangolin.ir", "qualname": "Op.name", "kind": "variable", "doc": "<p>The name of the Op</p>\n", "annotation": ": str"}, "pangolin.ir.Op.random": {"fullname": "pangolin.ir.Op.random", "modulename": "pangolin.ir", "qualname": "Op.random", "kind": "variable", "doc": "<p>True for conditional distributions, False for deterministic functions</p>\n", "annotation": ": bool"}, "pangolin.ir.Op.get_shape": {"fullname": "pangolin.ir.Op.get_shape", "modulename": "pangolin.ir", "qualname": "Op.get_shape", "kind": "function", "doc": "<p>Given the shapes of parents, return the shape of the output of this <code>Op</code>. Subclasses\nmust provide a <code>_get_shape(*parents_shapes)</code> function. This is needed because some <code>Op</code>s\n(e.g. multivariate normal distributions) can have different shapes depending on the\nshapes of the parents.</p>\n\n<p>It is also expected that <code>Op</code>s define a <code>_get_shape</code> method that does error checking\u2014e.g.\nverifies that the correct number of arguments are provided and the shapes of the parents\nare coherent with each other.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">parents_shapes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.ir.RV": {"fullname": "pangolin.ir.RV", "modulename": "pangolin.ir", "qualname": "RV", "kind": "class", "doc": "<p>A RV is essentially just a tuple of an Op and a set of parent RVs.</p>\n", "bases": "pangolin.dag.Node"}, "pangolin.ir.RV.__init__": {"fullname": "pangolin.ir.RV.__init__", "modulename": "pangolin.ir", "qualname": "RV.__init__", "kind": "function", "doc": "<p>Initialize an RV with Op <code>op</code> and parents <code>*parents</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">op</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">parents</span><span class=\"p\">:</span> <span class=\"n\">Self</span></span>)</span>"}, "pangolin.ir.RV.op": {"fullname": "pangolin.ir.RV.op", "modulename": "pangolin.ir", "qualname": "RV.op", "kind": "variable", "doc": "<p>The Op corresponding to this RV.</p>\n"}, "pangolin.ir.RV.shape": {"fullname": "pangolin.ir.RV.shape", "modulename": "pangolin.ir", "qualname": "RV.shape", "kind": "variable", "doc": "<p>The shape of the RV. (A tuple of ints.)</p>\n"}, "pangolin.ir.RV.ndim": {"fullname": "pangolin.ir.RV.ndim", "modulename": "pangolin.ir", "qualname": "RV.ndim", "kind": "variable", "doc": "<p>The number of dimensions of the RV. Equal to the length of <code>shape</code>.</p>\n"}, "pangolin.ir.Constant": {"fullname": "pangolin.ir.Constant", "modulename": "pangolin.ir", "qualname": "Constant", "kind": "class", "doc": "<p>Represents a \"constant\" distribution. Has no parents. Data is always stored as a\nnumpy array. You can switch it to use jax's version of numpy by setting <code>ir.np =\njax.numpy</code>.</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.Constant.__init__": {"fullname": "pangolin.ir.Constant.__init__", "modulename": "pangolin.ir", "qualname": "Constant.__init__", "kind": "function", "doc": "<p>Create a Constant distribution.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong>: Some constant value that is either a numpy array or something that can be casted to a\nnumpy array.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span>)</span>"}, "pangolin.ir.Constant.value": {"fullname": "pangolin.ir.Constant.value", "modulename": "pangolin.ir", "qualname": "Constant.value", "kind": "variable", "doc": "<p>The actual stored data, stored as an immutable numpy array</p>\n"}, "pangolin.ir.VMap": {"fullname": "pangolin.ir.VMap", "modulename": "pangolin.ir", "qualname": "VMap", "kind": "class", "doc": "<p>Represents a <code>VMap</code> Op. That's <em>one specific</em> op vectorized over some number of arguments.</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.VMap.__init__": {"fullname": "pangolin.ir.VMap.__init__", "modulename": "pangolin.ir", "qualname": "VMap.__init__", "kind": "function", "doc": "<p>Create a <code>VMap</code> Op. All arguments here are heavily inspired by <a href=\"a href=&quot;https://jax.readthedocs.io/en/latest/_autosummary/jax.vmap.html&quot;&gt;https://jax.readthedocs.io/en/latest/_autosummary/jax.vmap.html&lt;/a\"><code>jax.lax.vmap</code></a> although note that\n<code>VMap</code> only maps a single <code>Op</code>. (The <code>vmap</code> function defined elsewhere takes an arbitrary\nfunction and transforms it into a graph of RVs with <code>VMap</code> <code>Op</code>s.)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_op</strong> (Op):\nThe <code>Op</code> to be mapped</li>\n<li><strong>in_axes</strong> (tuple[int | None, ...] | list[int | None, ...]):\nWhat axis to map for each argument of the op (each can be a non-negative int or\n<code>None</code>)</li>\n<li><strong>axis_size</strong> (int | None):\nThe size of the mapped axis/axes. Optional unless all elements of <code>in_axes</code> are <code>None</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_op</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">Op</span>,</span><span class=\"param\">\t<span class=\"n\">in_axes</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "pangolin.ir.VMap.base_op": {"fullname": "pangolin.ir.VMap.base_op", "modulename": "pangolin.ir", "qualname": "VMap.base_op", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.VMap.in_axes": {"fullname": "pangolin.ir.VMap.in_axes", "modulename": "pangolin.ir", "qualname": "VMap.in_axes", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.VMap.axis_size": {"fullname": "pangolin.ir.VMap.axis_size", "modulename": "pangolin.ir", "qualname": "VMap.axis_size", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.Add": {"fullname": "pangolin.ir.Add", "modulename": "pangolin.ir", "qualname": "Add", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.Index": {"fullname": "pangolin.ir.Index", "modulename": "pangolin.ir", "qualname": "Index", "kind": "class", "doc": "<p>Represents an <code>Op</code> to index into a <code>RV</code>. Slices for all sliced dimensions\nmust be baked into the Index op when created. Non sliced dimensions are not\npart of the <code>Op</code> (they can be random variables).</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.Index.__init__": {"fullname": "pangolin.ir.Index.__init__", "modulename": "pangolin.ir", "qualname": "Index.__init__", "kind": "function", "doc": "<p>Create an Index op given a set of slices.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>slices</strong>: A list with length equal to the number of dimensions of the RV that\nis to be indexed. Each element must either be (a) a slice with fixed\ninteger values or (b) None, indicating that the dimension will be\nindexed with a RV instead.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">slices</span><span class=\"p\">:</span> <span class=\"nb\">slice</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span>)</span>"}, "pangolin.ir.Index.slices": {"fullname": "pangolin.ir.Index.slices", "modulename": "pangolin.ir", "qualname": "Index.slices", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.Index.advanced_at_start": {"fullname": "pangolin.ir.Index.advanced_at_start", "modulename": "pangolin.ir", "qualname": "Index.advanced_at_start", "kind": "variable", "doc": "<p>Most people don't realize that this is how numpy works:</p>\n\n<p>Numpy rules say that if you have \"advanced indices\" (like <code>i</code>) above\nand they are <em>separated by a slice</em> then the dimension for the advanced\nindex goes at the start. (This is what happens in the second case above.)\nOtherwise, all the indices go to the location of the first advanced index.</p>\n", "annotation": ": bool"}, "pangolin.ir.Composite": {"fullname": "pangolin.ir.Composite", "modulename": "pangolin.ir", "qualname": "Composite", "kind": "class", "doc": "<p>A composite distribution can have any number of inputs. par_nums counts all the inputs first\n(in order) followed by the variables generated by the composite distribution itself</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.Composite.__init__": {"fullname": "pangolin.ir.Composite.__init__", "modulename": "pangolin.ir", "qualname": "Composite.__init__", "kind": "function", "doc": "<p>Create a new op</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nname for the operator (used only for printing, not functionality)</li>\n<li><strong>random</strong> (bool):\nis this a conditional distribution? (<code>random=True</code>) or a deterministic function (\n<code>random=False</code>)?</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_inputs</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ops</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">Op</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">Op</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">par_nums</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span></span>)</span>"}, "pangolin.ir.Composite.num_inputs": {"fullname": "pangolin.ir.Composite.num_inputs", "modulename": "pangolin.ir", "qualname": "Composite.num_inputs", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.Composite.ops": {"fullname": "pangolin.ir.Composite.ops", "modulename": "pangolin.ir", "qualname": "Composite.ops", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.Composite.par_nums": {"fullname": "pangolin.ir.Composite.par_nums", "modulename": "pangolin.ir", "qualname": "Composite.par_nums", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.Autoregressive": {"fullname": "pangolin.ir.Autoregressive", "modulename": "pangolin.ir", "qualname": "Autoregressive", "kind": "class", "doc": "<p>Abstract base class for operators. An <code>Op</code> represents a deterministic function or conditional\ndistribution.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>An <code>Op</code> <em>only</em> represents an operator\u2014all functionality for sampling or density evaluation,\netc. is left to inference engines.</li>\n<li><code>Op</code>s must provide an <code>__eq__</code> method such that <em>mathematically equivalent</em> <code>Op</code>s are\nequal, regardless of if they occupy the same place in memory. For example, <code>d1 = Normal()</code>\nand <code>d2 = Normal()</code> then <code>d1 == d2</code>. This base class provides a default implementation that\nsimply tests if the types are the same. If an Op takes parameters (e.g. <code>VMap</code>), this should be\noverridden.</li>\n<li><code>Op</code>s are programmatically enforced to be frozen after initialization.</li>\n</ul>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.Autoregressive.__init__": {"fullname": "pangolin.ir.Autoregressive.__init__", "modulename": "pangolin.ir", "qualname": "Autoregressive.__init__", "kind": "function", "doc": "<p>base_cond_dist - what distribution to repeat on\nnum_constants - number of constant arguments (default 0)\nlength - the number of times to repeat (optional if there are )</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_op</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">Op</span>,</span><span class=\"param\">\t<span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">in_axes</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">where_self</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, "pangolin.ir.Autoregressive.base_op": {"fullname": "pangolin.ir.Autoregressive.base_op", "modulename": "pangolin.ir", "qualname": "Autoregressive.base_op", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.Autoregressive.length": {"fullname": "pangolin.ir.Autoregressive.length", "modulename": "pangolin.ir", "qualname": "Autoregressive.length", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.Autoregressive.in_axes": {"fullname": "pangolin.ir.Autoregressive.in_axes", "modulename": "pangolin.ir", "qualname": "Autoregressive.in_axes", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.Autoregressive.where_self": {"fullname": "pangolin.ir.Autoregressive.where_self", "modulename": "pangolin.ir", "qualname": "Autoregressive.where_self", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.constant": {"fullname": "pangolin.ir.constant", "modulename": "pangolin.ir.constant", "kind": "module", "doc": "<p></p>\n"}, "pangolin.ir.constant.Constant": {"fullname": "pangolin.ir.constant.Constant", "modulename": "pangolin.ir.constant", "qualname": "Constant", "kind": "class", "doc": "<p>Represents a \"constant\" distribution. Has no parents. Data is always stored as a\nnumpy array. You can switch it to use jax's version of numpy by setting <code>ir.np =\njax.numpy</code>.</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.constant.Constant.__init__": {"fullname": "pangolin.ir.constant.Constant.__init__", "modulename": "pangolin.ir.constant", "qualname": "Constant.__init__", "kind": "function", "doc": "<p>Create a Constant distribution.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong>: Some constant value that is either a numpy array or something that can be casted to a\nnumpy array.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span>)</span>"}, "pangolin.ir.constant.Constant.value": {"fullname": "pangolin.ir.constant.Constant.value", "modulename": "pangolin.ir.constant", "qualname": "Constant.value", "kind": "variable", "doc": "<p>The actual stored data, stored as an immutable numpy array</p>\n"}, "pangolin.ir.index": {"fullname": "pangolin.ir.index", "modulename": "pangolin.ir.index", "kind": "module", "doc": "<p>An Index is a deterministic <code>Op</code> that takes (1) an RV to be indexed and (2) a set of (\ninteger-valued) indexing RVs and returns the result of indexing the first RV with the second.</p>\n\n<p>Conceptually, say the user does something like this:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">constant</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">categorical</span><span class=\"p\">([</span><span class=\"mf\">.1</span><span class=\"p\">,</span><span class=\"mf\">.2</span><span class=\"p\">,</span><span class=\"mf\">.7</span><span class=\"p\">])</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<p>Then we would like this to lead to an IR something like:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">Constant</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]))</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">Constant</span><span class=\"p\">([</span><span class=\"mf\">.1</span><span class=\"p\">,</span><span class=\"mf\">.2</span><span class=\"p\">,</span><span class=\"mf\">.7</span><span class=\"p\">])</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">Index</span><span class=\"p\">(),</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Seems simple, right? But there are two major subtleties:</p>\n\n<p><strong>First subtlety.</strong> Given the above description, you might think that the Index Op itself would\nneed no parameters\u2014there aren't \"different kinds\" of indexing, after all. And we want to allow\nindices to be random variables.</p>\n\n<p>But there is a problem: We also want to allow indexing with <em>slices</em> and if <em>slices</em> are defined\nwith random variables, then the <em>size</em> of the output would also be random, which would break our\nabstraction where all RVs have fixed shapes.</p>\n\n<p>To deal with this, there are different instances of <code>Index</code> Ops, depending on what dimensions\nwill be sliced. All slices must be baked into the Index <code>Op</code> with <em>fixed</em> integer values. Then,\nall the non-sliced arguments are still free to be <code>RV</code>s. So an <code>Index</code> Op is created by givin a\nlist of slices, each can either be a fixed slice, or <code>None</code>, indicating that the dimension is\nunsliced and will come from a <code>RV</code>.</p>\n\n<p>So, for example, if you do this:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">constant</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">])</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">categorical</span><span class=\"p\">([</span><span class=\"mf\">.1</span><span class=\"p\">,</span><span class=\"mf\">.2</span><span class=\"p\">,</span><span class=\"mf\">.7</span><span class=\"p\">])</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">[:,</span><span class=\"n\">i</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<p>then under the hood you will get a representation like</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">Constant</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]])</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">Constant</span><span class=\"p\">([</span><span class=\"mf\">.1</span><span class=\"p\">,</span><span class=\"mf\">.2</span><span class=\"p\">,</span><span class=\"mf\">.7</span><span class=\"p\">])</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">Categorical</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">Index</span><span class=\"p\">(</span><span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">),</span><span class=\"kc\">None</span><span class=\"p\">),</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><strong>Second subtlety.</strong> We would like to support substantially all of Numpy's indexing features. But\nNumpy's indexing is much weirder than most people realize. For example, consider this code:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">,:,:]</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"c1\"># (6,4,5) # ok</span>\n<span class=\"n\">A</span><span class=\"p\">[:,:,</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"c1\"># (2,3,6) # ok</span>\n<span class=\"n\">A</span><span class=\"p\">[:,</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">,:]</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"c1\"># (2,6,5) # fine</span>\n<span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,:,:,</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"c1\"># (6,3,4) # ok, I guess</span>\n<span class=\"n\">A</span><span class=\"p\">[:,</span><span class=\"n\">i</span><span class=\"p\">,:,</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"c1\"># (6,2,4) # what!?</span>\n</code></pre>\n</div>\n\n<p>Yes, that is really what happens, try it! What's happening here is that when you have multiple\n\"advanced indices\" (like <code>i</code>) above, numpy has very complicated <a href=\"https://numpy.org/doc/stable/user/basics.indexing.html#advanced-indexing\">advanced indexing rules</a>. These basically say that:</p>\n\n<ol>\n<li><p>If all the advanced indices are next to each other, then the corresponding dimension in the\noutput goes at the location of the <em>first</em> advanced index.</p></li>\n<li><p>If the advanced indices are separated by any slices, then the corresponding dimension goes at\nthe <em>start</em> in the output.</p></li>\n</ol>\n\n<p>We just have to live with this, but it complicates things quite a bit.</p>\n\n<p><strong>Note:</strong> There is one indexing feature from numpy that is <em>not</em> supported at the moment,\nnamely broadcasting of indices. For example, in Pangolin, you cannot write <code>x[3,[0,1,2]]</code> as a\nshorthand for <code>x[[3,3,3],[0,1,2]]</code>. We might change this at some point if there is some need.</p>\n\n<p><strong>Note</strong> As illustrated above, non-sliced indices are free to be random variables. Although,\ncurrently, JAGS is the only backend that can actually do inference in these settings.</p>\n"}, "pangolin.ir.index.Index": {"fullname": "pangolin.ir.index.Index", "modulename": "pangolin.ir.index", "qualname": "Index", "kind": "class", "doc": "<p>Represents an <code>Op</code> to index into a <code>RV</code>. Slices for all sliced dimensions\nmust be baked into the Index op when created. Non sliced dimensions are not\npart of the <code>Op</code> (they can be random variables).</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.index.Index.__init__": {"fullname": "pangolin.ir.index.Index.__init__", "modulename": "pangolin.ir.index", "qualname": "Index.__init__", "kind": "function", "doc": "<p>Create an Index op given a set of slices.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>slices</strong>: A list with length equal to the number of dimensions of the RV that\nis to be indexed. Each element must either be (a) a slice with fixed\ninteger values or (b) None, indicating that the dimension will be\nindexed with a RV instead.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">slices</span><span class=\"p\">:</span> <span class=\"nb\">slice</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span>)</span>"}, "pangolin.ir.index.Index.slices": {"fullname": "pangolin.ir.index.Index.slices", "modulename": "pangolin.ir.index", "qualname": "Index.slices", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.index.Index.advanced_at_start": {"fullname": "pangolin.ir.index.Index.advanced_at_start", "modulename": "pangolin.ir.index", "qualname": "Index.advanced_at_start", "kind": "variable", "doc": "<p>Most people don't realize that this is how numpy works:</p>\n\n<p>Numpy rules say that if you have \"advanced indices\" (like <code>i</code>) above\nand they are <em>separated by a slice</em> then the dimension for the advanced\nindex goes at the start. (This is what happens in the second case above.)\nOtherwise, all the indices go to the location of the first advanced index.</p>\n", "annotation": ": bool"}, "pangolin.ir.multivariate_dists": {"fullname": "pangolin.ir.multivariate_dists", "modulename": "pangolin.ir.multivariate_dists", "kind": "module", "doc": "<p></p>\n"}, "pangolin.ir.multivariate_dists.VecMatOp": {"fullname": "pangolin.ir.multivariate_dists.VecMatOp", "modulename": "pangolin.ir.multivariate_dists", "qualname": "VecMatOp", "kind": "class", "doc": "<p>Convenience class to create \"vec mat\" distributions that take as input a vector of\nlength N, a matrix of size NxN and is a vector of length N</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"fullname": "pangolin.ir.multivariate_dists.VecMatOp.__init__", "modulename": "pangolin.ir.multivariate_dists", "qualname": "VecMatOp.__init__", "kind": "function", "doc": "<p>Create a new op</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nname for the operator (used only for printing, not functionality)</li>\n<li><strong>random</strong> (bool):\nis this a conditional distribution? (<code>random=True</code>) or a deterministic function (\n<code>random=False</code>)?</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span></span>)</span>"}, "pangolin.ir.multivariate_dists.MultiNormal": {"fullname": "pangolin.ir.multivariate_dists.MultiNormal", "modulename": "pangolin.ir.multivariate_dists", "qualname": "MultiNormal", "kind": "class", "doc": "<p>MultiNormal distribution parameterized in terms of the mean and covariance.</p>\n", "bases": "VecMatOp"}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"fullname": "pangolin.ir.multivariate_dists.MultiNormal.__init__", "modulename": "pangolin.ir.multivariate_dists", "qualname": "MultiNormal.__init__", "kind": "function", "doc": "<p>Create a MultiNormal instance. Takes no parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pangolin.ir.multivariate_dists.Categorical": {"fullname": "pangolin.ir.multivariate_dists.Categorical", "modulename": "pangolin.ir.multivariate_dists", "qualname": "Categorical", "kind": "class", "doc": "<p>Categorical distribution parameterized in terms of a 1-d vector of weights.</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"fullname": "pangolin.ir.multivariate_dists.Categorical.__init__", "modulename": "pangolin.ir.multivariate_dists", "qualname": "Categorical.__init__", "kind": "function", "doc": "<p>Create a Categorical instance. Takes no parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pangolin.ir.multivariate_dists.Multinomial": {"fullname": "pangolin.ir.multivariate_dists.Multinomial", "modulename": "pangolin.ir.multivariate_dists", "qualname": "Multinomial", "kind": "class", "doc": "<p>Multinomial distribution parameterized in terms of the number of observations <code>n</code> (a scalar)\nand a vector of probabilities <code>p</code> (1-D).</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"fullname": "pangolin.ir.multivariate_dists.Multinomial.__init__", "modulename": "pangolin.ir.multivariate_dists", "qualname": "Multinomial.__init__", "kind": "function", "doc": "<p>Create a Multinomial instance. Takes no parameters.\nNote: parameterization is different from Stan (which doesn't need n to be passed)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pangolin.ir.multivariate_dists.Dirichlet": {"fullname": "pangolin.ir.multivariate_dists.Dirichlet", "modulename": "pangolin.ir.multivariate_dists", "qualname": "Dirichlet", "kind": "class", "doc": "<p>Dirichlet distribution parameterized in terms of the concentration</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"fullname": "pangolin.ir.multivariate_dists.Dirichlet.__init__", "modulename": "pangolin.ir.multivariate_dists", "qualname": "Dirichlet.__init__", "kind": "function", "doc": "<p>Create a Dirichlet instance. Takes no parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pangolin.ir.multivariate_funs": {"fullname": "pangolin.ir.multivariate_funs", "modulename": "pangolin.ir.multivariate_funs", "kind": "module", "doc": "<p>Various assorted multivariate deterministic functions</p>\n"}, "pangolin.ir.multivariate_funs.MatMul": {"fullname": "pangolin.ir.multivariate_funs.MatMul", "modulename": "pangolin.ir.multivariate_funs", "qualname": "MatMul", "kind": "class", "doc": "<p>A class that does matrix multiplication, following the rules of <code>numpy.matmul</code>.\nCurrently only 1d and 2d arrays are supported.</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"fullname": "pangolin.ir.multivariate_funs.MatMul.__init__", "modulename": "pangolin.ir.multivariate_funs", "qualname": "MatMul.__init__", "kind": "function", "doc": "<p>Create a new op</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nname for the operator (used only for printing, not functionality)</li>\n<li><strong>random</strong> (bool):\nis this a conditional distribution? (<code>random=True</code>) or a deterministic function (\n<code>random=False</code>)?</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pangolin.ir.multivariate_funs.Inv": {"fullname": "pangolin.ir.multivariate_funs.Inv", "modulename": "pangolin.ir.multivariate_funs", "qualname": "Inv", "kind": "class", "doc": "<p>Take the inverse of a square matrix</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.multivariate_funs.Inv.__init__": {"fullname": "pangolin.ir.multivariate_funs.Inv.__init__", "modulename": "pangolin.ir.multivariate_funs", "qualname": "Inv.__init__", "kind": "function", "doc": "<p>Create a new op</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nname for the operator (used only for printing, not functionality)</li>\n<li><strong>random</strong> (bool):\nis this a conditional distribution? (<code>random=True</code>) or a deterministic function (\n<code>random=False</code>)?</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pangolin.ir.multivariate_funs.Softmax": {"fullname": "pangolin.ir.multivariate_funs.Softmax", "modulename": "pangolin.ir.multivariate_funs", "qualname": "Softmax", "kind": "class", "doc": "<p>Softmax</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"fullname": "pangolin.ir.multivariate_funs.Softmax.__init__", "modulename": "pangolin.ir.multivariate_funs", "qualname": "Softmax.__init__", "kind": "function", "doc": "<p>Create a new op</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nname for the operator (used only for printing, not functionality)</li>\n<li><strong>random</strong> (bool):\nis this a conditional distribution? (<code>random=True</code>) or a deterministic function (\n<code>random=False</code>)?</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pangolin.ir.multivariate_funs.Sum": {"fullname": "pangolin.ir.multivariate_funs.Sum", "modulename": "pangolin.ir.multivariate_funs", "qualname": "Sum", "kind": "class", "doc": "<p>Take the sum of an array over some axis</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.multivariate_funs.Sum.__init__": {"fullname": "pangolin.ir.multivariate_funs.Sum.__init__", "modulename": "pangolin.ir.multivariate_funs", "qualname": "Sum.__init__", "kind": "function", "doc": "<p>Create a Sum instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>axis</strong> (int):\nWhat axis to sum over.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">axis</span></span>)</span>"}, "pangolin.ir.multivariate_funs.Sum.axis": {"fullname": "pangolin.ir.multivariate_funs.Sum.axis", "modulename": "pangolin.ir.multivariate_funs", "qualname": "Sum.axis", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.op": {"fullname": "pangolin.ir.op", "modulename": "pangolin.ir.op", "kind": "module", "doc": "<p></p>\n"}, "pangolin.ir.op.Op": {"fullname": "pangolin.ir.op.Op", "modulename": "pangolin.ir.op", "qualname": "Op", "kind": "class", "doc": "<p>Abstract base class for operators. An <code>Op</code> represents a deterministic function or conditional\ndistribution.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>An <code>Op</code> <em>only</em> represents an operator\u2014all functionality for sampling or density evaluation,\netc. is left to inference engines.</li>\n<li><code>Op</code>s must provide an <code>__eq__</code> method such that <em>mathematically equivalent</em> <code>Op</code>s are\nequal, regardless of if they occupy the same place in memory. For example, <code>d1 = Normal()</code>\nand <code>d2 = Normal()</code> then <code>d1 == d2</code>. This base class provides a default implementation that\nsimply tests if the types are the same. If an Op takes parameters (e.g. <code>VMap</code>), this should be\noverridden.</li>\n<li><code>Op</code>s are programmatically enforced to be frozen after initialization.</li>\n</ul>\n", "bases": "abc.ABC"}, "pangolin.ir.op.Op.__init__": {"fullname": "pangolin.ir.op.Op.__init__", "modulename": "pangolin.ir.op", "qualname": "Op.__init__", "kind": "function", "doc": "<p>Create a new op</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nname for the operator (used only for printing, not functionality)</li>\n<li><strong>random</strong> (bool):\nis this a conditional distribution? (<code>random=True</code>) or a deterministic function (\n<code>random=False</code>)?</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">random</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "pangolin.ir.op.Op.name": {"fullname": "pangolin.ir.op.Op.name", "modulename": "pangolin.ir.op", "qualname": "Op.name", "kind": "variable", "doc": "<p>The name of the Op</p>\n", "annotation": ": str"}, "pangolin.ir.op.Op.random": {"fullname": "pangolin.ir.op.Op.random", "modulename": "pangolin.ir.op", "qualname": "Op.random", "kind": "variable", "doc": "<p>True for conditional distributions, False for deterministic functions</p>\n", "annotation": ": bool"}, "pangolin.ir.op.Op.get_shape": {"fullname": "pangolin.ir.op.Op.get_shape", "modulename": "pangolin.ir.op", "qualname": "Op.get_shape", "kind": "function", "doc": "<p>Given the shapes of parents, return the shape of the output of this <code>Op</code>. Subclasses\nmust provide a <code>_get_shape(*parents_shapes)</code> function. This is needed because some <code>Op</code>s\n(e.g. multivariate normal distributions) can have different shapes depending on the\nshapes of the parents.</p>\n\n<p>It is also expected that <code>Op</code>s define a <code>_get_shape</code> method that does error checking\u2014e.g.\nverifies that the correct number of arguments are provided and the shapes of the parents\nare coherent with each other.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">parents_shapes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.ir.rv": {"fullname": "pangolin.ir.rv", "modulename": "pangolin.ir.rv", "kind": "module", "doc": "<p></p>\n"}, "pangolin.ir.rv.RV": {"fullname": "pangolin.ir.rv.RV", "modulename": "pangolin.ir.rv", "qualname": "RV", "kind": "class", "doc": "<p>A RV is essentially just a tuple of an Op and a set of parent RVs.</p>\n", "bases": "pangolin.dag.Node"}, "pangolin.ir.rv.RV.__init__": {"fullname": "pangolin.ir.rv.RV.__init__", "modulename": "pangolin.ir.rv", "qualname": "RV.__init__", "kind": "function", "doc": "<p>Initialize an RV with Op <code>op</code> and parents <code>*parents</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">op</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">parents</span><span class=\"p\">:</span> <span class=\"n\">Self</span></span>)</span>"}, "pangolin.ir.rv.RV.op": {"fullname": "pangolin.ir.rv.RV.op", "modulename": "pangolin.ir.rv", "qualname": "RV.op", "kind": "variable", "doc": "<p>The Op corresponding to this RV.</p>\n"}, "pangolin.ir.rv.RV.shape": {"fullname": "pangolin.ir.rv.RV.shape", "modulename": "pangolin.ir.rv", "qualname": "RV.shape", "kind": "variable", "doc": "<p>The shape of the RV. (A tuple of ints.)</p>\n"}, "pangolin.ir.rv.RV.ndim": {"fullname": "pangolin.ir.rv.RV.ndim", "modulename": "pangolin.ir.rv", "qualname": "RV.ndim", "kind": "variable", "doc": "<p>The number of dimensions of the RV. Equal to the length of <code>shape</code>.</p>\n"}, "pangolin.ir.scalar_ops": {"fullname": "pangolin.ir.scalar_ops", "modulename": "pangolin.ir.scalar_ops", "kind": "module", "doc": "<p>This module defines some \"all scalar\" ops where all inputs and outputs are scalars. In each case\nthere is an <code>Op</code> <em>class</em> created, and then an <code>Op</code> <em>instance</em> for convenience. For example,\n<code>Normal</code> represents the class of all Gaussian conditional distributions. These do not have any\nparameters, because there aren't different \"types\" of normal distributions. For convenience,\nwe also provide <code>normal=Normal()</code>, which is one particular Gaussian conditional distribution.</p>\n\n<p>The user is expected to interact with these (lower case) instances, e.g. by calling</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">scalar_ops</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>If for some reason you didn't want to use the built-in convenience class, this is equivalent to\nwriting</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">scalar_ops</span><span class=\"o\">.</span><span class=\"n\">Normal</span><span class=\"p\">()(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Or, if you wanted to be even more pedantic, you could write</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">scalar_ops</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>or even</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">rv</span><span class=\"o\">.</span><span class=\"n\">RV</span><span class=\"p\">(</span><span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">scalar_ops</span><span class=\"o\">.</span><span class=\"n\">Normal</span><span class=\"p\">(),</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>But there's no reason to do that.</p>\n"}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"fullname": "pangolin.ir.scalar_ops.all_scalar_op_factory", "modulename": "pangolin.ir.scalar_ops", "qualname": "all_scalar_op_factory", "kind": "function", "doc": "<p>\"Factory\" to create an \"all scalar\" op where all parents and inputs are scalars.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>num_parents</strong> (int):\nThe number of parameters for the op</li>\n<li><strong>name</strong> (str):\nThe name for the op (used for printing)</li>\n<li><strong>random</strong> (bool):\nIs the op a conditional distribution (True) or a deterministic function (False)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>OpClass</strong>: A new subtype of Op</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_parents</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">random</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.ir.scalar_ops.Cauchy": {"fullname": "pangolin.ir.scalar_ops.Cauchy", "modulename": "pangolin.ir.scalar_ops", "qualname": "Cauchy", "kind": "variable", "doc": "<p>A Cauchy parameterized by location and scale. Call as <code>Cauchy()</code>.</p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Normal": {"fullname": "pangolin.ir.scalar_ops.Normal", "modulename": "pangolin.ir.scalar_ops", "qualname": "Normal", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.NormalPrec": {"fullname": "pangolin.ir.scalar_ops.NormalPrec", "modulename": "pangolin.ir.scalar_ops", "qualname": "NormalPrec", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.LogNormal": {"fullname": "pangolin.ir.scalar_ops.LogNormal", "modulename": "pangolin.ir.scalar_ops", "qualname": "LogNormal", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Bernoulli": {"fullname": "pangolin.ir.scalar_ops.Bernoulli", "modulename": "pangolin.ir.scalar_ops", "qualname": "Bernoulli", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.BernoulliLogit": {"fullname": "pangolin.ir.scalar_ops.BernoulliLogit", "modulename": "pangolin.ir.scalar_ops", "qualname": "BernoulliLogit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Binomial": {"fullname": "pangolin.ir.scalar_ops.Binomial", "modulename": "pangolin.ir.scalar_ops", "qualname": "Binomial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Uniform": {"fullname": "pangolin.ir.scalar_ops.Uniform", "modulename": "pangolin.ir.scalar_ops", "qualname": "Uniform", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Beta": {"fullname": "pangolin.ir.scalar_ops.Beta", "modulename": "pangolin.ir.scalar_ops", "qualname": "Beta", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Exponential": {"fullname": "pangolin.ir.scalar_ops.Exponential", "modulename": "pangolin.ir.scalar_ops", "qualname": "Exponential", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Gamma": {"fullname": "pangolin.ir.scalar_ops.Gamma", "modulename": "pangolin.ir.scalar_ops", "qualname": "Gamma", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Poisson": {"fullname": "pangolin.ir.scalar_ops.Poisson", "modulename": "pangolin.ir.scalar_ops", "qualname": "Poisson", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.BetaBinomial": {"fullname": "pangolin.ir.scalar_ops.BetaBinomial", "modulename": "pangolin.ir.scalar_ops", "qualname": "BetaBinomial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.StudentT": {"fullname": "pangolin.ir.scalar_ops.StudentT", "modulename": "pangolin.ir.scalar_ops", "qualname": "StudentT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Add": {"fullname": "pangolin.ir.scalar_ops.Add", "modulename": "pangolin.ir.scalar_ops", "qualname": "Add", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Sub": {"fullname": "pangolin.ir.scalar_ops.Sub", "modulename": "pangolin.ir.scalar_ops", "qualname": "Sub", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Mul": {"fullname": "pangolin.ir.scalar_ops.Mul", "modulename": "pangolin.ir.scalar_ops", "qualname": "Mul", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Div": {"fullname": "pangolin.ir.scalar_ops.Div", "modulename": "pangolin.ir.scalar_ops", "qualname": "Div", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Pow": {"fullname": "pangolin.ir.scalar_ops.Pow", "modulename": "pangolin.ir.scalar_ops", "qualname": "Pow", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Abs": {"fullname": "pangolin.ir.scalar_ops.Abs", "modulename": "pangolin.ir.scalar_ops", "qualname": "Abs", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Arccos": {"fullname": "pangolin.ir.scalar_ops.Arccos", "modulename": "pangolin.ir.scalar_ops", "qualname": "Arccos", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Arccosh": {"fullname": "pangolin.ir.scalar_ops.Arccosh", "modulename": "pangolin.ir.scalar_ops", "qualname": "Arccosh", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Arcsin": {"fullname": "pangolin.ir.scalar_ops.Arcsin", "modulename": "pangolin.ir.scalar_ops", "qualname": "Arcsin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Arcsinh": {"fullname": "pangolin.ir.scalar_ops.Arcsinh", "modulename": "pangolin.ir.scalar_ops", "qualname": "Arcsinh", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Arctan": {"fullname": "pangolin.ir.scalar_ops.Arctan", "modulename": "pangolin.ir.scalar_ops", "qualname": "Arctan", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Arctanh": {"fullname": "pangolin.ir.scalar_ops.Arctanh", "modulename": "pangolin.ir.scalar_ops", "qualname": "Arctanh", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Cos": {"fullname": "pangolin.ir.scalar_ops.Cos", "modulename": "pangolin.ir.scalar_ops", "qualname": "Cos", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Cosh": {"fullname": "pangolin.ir.scalar_ops.Cosh", "modulename": "pangolin.ir.scalar_ops", "qualname": "Cosh", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Exp": {"fullname": "pangolin.ir.scalar_ops.Exp", "modulename": "pangolin.ir.scalar_ops", "qualname": "Exp", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.InvLogit": {"fullname": "pangolin.ir.scalar_ops.InvLogit", "modulename": "pangolin.ir.scalar_ops", "qualname": "InvLogit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Log": {"fullname": "pangolin.ir.scalar_ops.Log", "modulename": "pangolin.ir.scalar_ops", "qualname": "Log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Loggamma": {"fullname": "pangolin.ir.scalar_ops.Loggamma", "modulename": "pangolin.ir.scalar_ops", "qualname": "Loggamma", "kind": "variable", "doc": "<p>Log gamma function. TODO: do we want scipy.special.loggamma or scipy.special.gammaln? different!</p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Logit": {"fullname": "pangolin.ir.scalar_ops.Logit", "modulename": "pangolin.ir.scalar_ops", "qualname": "Logit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Sin": {"fullname": "pangolin.ir.scalar_ops.Sin", "modulename": "pangolin.ir.scalar_ops", "qualname": "Sin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Sinh": {"fullname": "pangolin.ir.scalar_ops.Sinh", "modulename": "pangolin.ir.scalar_ops", "qualname": "Sinh", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Step": {"fullname": "pangolin.ir.scalar_ops.Step", "modulename": "pangolin.ir.scalar_ops", "qualname": "Step", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Tan": {"fullname": "pangolin.ir.scalar_ops.Tan", "modulename": "pangolin.ir.scalar_ops", "qualname": "Tan", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.scalar_ops.Tanh": {"fullname": "pangolin.ir.scalar_ops.Tanh", "modulename": "pangolin.ir.scalar_ops", "qualname": "Tanh", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pangolin.ir.scalar_ops.all_scalar_op_factory.&lt;locals&gt;.AllScalarOp&#x27;&gt;"}, "pangolin.ir.vmap": {"fullname": "pangolin.ir.vmap", "modulename": "pangolin.ir.vmap", "kind": "module", "doc": "<p></p>\n"}, "pangolin.ir.vmap.VMap": {"fullname": "pangolin.ir.vmap.VMap", "modulename": "pangolin.ir.vmap", "qualname": "VMap", "kind": "class", "doc": "<p>Represents a <code>VMap</code> Op. That's <em>one specific</em> op vectorized over some number of arguments.</p>\n", "bases": "pangolin.ir.op.Op"}, "pangolin.ir.vmap.VMap.__init__": {"fullname": "pangolin.ir.vmap.VMap.__init__", "modulename": "pangolin.ir.vmap", "qualname": "VMap.__init__", "kind": "function", "doc": "<p>Create a <code>VMap</code> Op. All arguments here are heavily inspired by <a href=\"a href=&quot;https://jax.readthedocs.io/en/latest/_autosummary/jax.vmap.html&quot;&gt;https://jax.readthedocs.io/en/latest/_autosummary/jax.vmap.html&lt;/a\"><code>jax.lax.vmap</code></a> although note that\n<code>VMap</code> only maps a single <code>Op</code>. (The <code>vmap</code> function defined elsewhere takes an arbitrary\nfunction and transforms it into a graph of RVs with <code>VMap</code> <code>Op</code>s.)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_op</strong> (Op):\nThe <code>Op</code> to be mapped</li>\n<li><strong>in_axes</strong> (tuple[int | None, ...] | list[int | None, ...]):\nWhat axis to map for each argument of the op (each can be a non-negative int or\n<code>None</code>)</li>\n<li><strong>axis_size</strong> (int | None):\nThe size of the mapped axis/axes. Optional unless all elements of <code>in_axes</code> are <code>None</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_op</span><span class=\"p\">:</span> <span class=\"n\">pangolin</span><span class=\"o\">.</span><span class=\"n\">ir</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">Op</span>,</span><span class=\"param\">\t<span class=\"n\">in_axes</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "pangolin.ir.vmap.VMap.base_op": {"fullname": "pangolin.ir.vmap.VMap.base_op", "modulename": "pangolin.ir.vmap", "qualname": "VMap.base_op", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.vmap.VMap.in_axes": {"fullname": "pangolin.ir.vmap.VMap.in_axes", "modulename": "pangolin.ir.vmap", "qualname": "VMap.in_axes", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.vmap.VMap.axis_size": {"fullname": "pangolin.ir.vmap.VMap.axis_size", "modulename": "pangolin.ir.vmap", "qualname": "VMap.axis_size", "kind": "variable", "doc": "<p></p>\n"}, "pangolin.ir.vmap.split_shape": {"fullname": "pangolin.ir.vmap.split_shape", "modulename": "pangolin.ir.vmap", "qualname": "split_shape", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">shape</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pangolin.ir.vmap.get_sliced_shapes": {"fullname": "pangolin.ir.vmap.get_sliced_shapes", "modulename": "pangolin.ir.vmap", "qualname": "get_sliced_shapes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">shapes</span>, </span><span class=\"param\"><span class=\"n\">in_axes</span>, </span><span class=\"param\"><span class=\"n\">axis_size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"pangolin": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 104}, "pangolin.vmap": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 200}, "pangolin.index": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 3}, "pangolin.inference": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.inference.inference_util": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.inference.inference_util.Calculate": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.inference.inference_util.Calculate.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 36}, "pangolin.inference.inference_util.Calculate.sample_flat": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.inference.inference_util.Calculate.frozen_options": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.inference.inference_util.Calculate.sample": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 234}, "pangolin.inference.inference_util.Calculate.E": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 3}, "pangolin.inference.inference_util.Calculate.var": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 3}, "pangolin.inference.inference_util.Calculate.std": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 3}, "pangolin.inference.numpyro": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.inference.numpyro.sample": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 234}, "pangolin.inference.numpyro.sample_flat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 338, "bases": 0, "doc": 3}, "pangolin.inference.numpyro.E": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 3}, "pangolin.inference.numpyro.var": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 3}, "pangolin.inference.numpyro.std": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 3}, "pangolin.interface": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.vmap": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.composite": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.autoregressive": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.Loop": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "pangolin.interface.Loop.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 40}, "pangolin.interface.Loop.loops": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 12}, "pangolin.interface.Loop.length": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.slot": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "pangolin.interface.print_upstream": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.OperatorRV": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 19}, "pangolin.interface.OperatorRV.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 16}, "pangolin.interface.OperatorRV.n": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.makerv": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 113}, "pangolin.interface.normal": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 488, "bases": 0, "doc": 28}, "pangolin.interface.normal_prec": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 28}, "pangolin.interface.log_normal": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "pangolin.interface.cauchy": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 11}, "pangolin.interface.bernoulli": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 31}, "pangolin.interface.bernoulli_logit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 36}, "pangolin.interface.binomial": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 40}, "pangolin.interface.uniform": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 21}, "pangolin.interface.beta": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 11}, "pangolin.interface.beta_binomial": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 78}, "pangolin.interface.exponential": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 11}, "pangolin.interface.gamma": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 32}, "pangolin.interface.poisson": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 11}, "pangolin.interface.student_t": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 31}, "pangolin.interface.add": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.sub": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.mul": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.div": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.pow": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.sqrt": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.abs": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.arccos": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.arccosh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.arcsin": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.arcsinh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.arctan": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.arctanh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.cos": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.cosh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.exp": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.inv_logit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.expit": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 8}, "pangolin.interface.sigmoid": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 8}, "pangolin.interface.log": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.log_gamma": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 32}, "pangolin.interface.logit": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.sin": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.sinh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.step": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.tan": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.tanh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.multi_normal": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 18}, "pangolin.interface.categorical": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 24}, "pangolin.interface.multinomial": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 41}, "pangolin.interface.dirichlet": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 30}, "pangolin.interface.matmul": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 125}, "pangolin.interface.inv": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 18}, "pangolin.interface.softmax": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 33}, "pangolin.interface.sum": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 53}, "pangolin.interface.autoregressive.autoregressive_flat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 8}, "pangolin.interface.autoregressive.autoregressive": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 8}, "pangolin.interface.autoregressive.repeat": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 31}, "pangolin.interface.composite.make_composite": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 87}, "pangolin.interface.composite.composite_flat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pangolin.interface.composite.composite": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pangolin.interface.interface": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "pangolin.interface.interface.RV_or_array": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 47, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.interface.for_api": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 163, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.interface.api": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 9}, "pangolin.interface.interface.OperatorRV": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 19}, "pangolin.interface.interface.OperatorRV.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 16}, "pangolin.interface.interface.OperatorRV.n": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.interface.rv_factory": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 45}, "pangolin.interface.interface.rv_factories": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.interface.SetRVFactory": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.interface.SetRVFactory.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.interface.non_operator_rv": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pangolin.interface.interface.makerv": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 113}, "pangolin.interface.interface.standard_makerv": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 42}, "pangolin.interface.interface.makerv_funs": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.interface.create_rv": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pangolin.interface.interface.normal": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 488, "bases": 0, "doc": 28}, "pangolin.interface.interface.normal_prec": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 28}, "pangolin.interface.interface.log_normal": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "pangolin.interface.interface.cauchy": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 11}, "pangolin.interface.interface.bernoulli": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 31}, "pangolin.interface.interface.bernoulli_logit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 36}, "pangolin.interface.interface.binomial": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 40}, "pangolin.interface.interface.uniform": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 21}, "pangolin.interface.interface.beta": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 11}, "pangolin.interface.interface.beta_binomial": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 78}, "pangolin.interface.interface.exponential": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 11}, "pangolin.interface.interface.gamma": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 32}, "pangolin.interface.interface.poisson": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 11}, "pangolin.interface.interface.student_t": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 31}, "pangolin.interface.interface.implicit_vectorized_scalar_fun": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pangolin.interface.interface.add": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 23}, "pangolin.interface.interface.sub": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 24}, "pangolin.interface.interface.mul": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 23}, "pangolin.interface.interface.div": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 23}, "pangolin.interface.interface.pow": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 25}, "pangolin.interface.interface.sqrt": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 13}, "pangolin.interface.interface.abs": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.interface.arccos": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.arccosh": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.arcsin": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.arcsinh": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.arctan": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.arctanh": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.cos": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.cosh": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.exp": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.inv_logit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.expit": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 8}, "pangolin.interface.interface.sigmoid": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 8}, "pangolin.interface.interface.log": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.log_gamma": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 32}, "pangolin.interface.interface.logit": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.sin": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.sinh": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.step": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.tan": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.tanh": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "pangolin.interface.interface.multi_normal": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 18}, "pangolin.interface.interface.categorical": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 24}, "pangolin.interface.interface.multinomial": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 41}, "pangolin.interface.interface.dirichlet": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 30}, "pangolin.interface.interface.matmul": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 125}, "pangolin.interface.interface.inv": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 18}, "pangolin.interface.interface.softmax": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 33}, "pangolin.interface.interface.sum": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 53}, "pangolin.interface.vmap.FlatCallable": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.vmap.check_tree_consistency": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "pangolin.interface.vmap.vmap": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 200}, "pangolin.interface.vmap.convert_args": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 78}, "pangolin.interface.vmap.generated_nodes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 130, "bases": 0, "doc": 133}, "pangolin.interface.vmap.generated_nodes_old": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 130, "bases": 0, "doc": 143}, "pangolin.interface.vmap.AbstractOp": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 22}, "pangolin.interface.vmap.AbstractOp.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 37}, "pangolin.interface.vmap.AbstractOp.shape": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.interface.vmap.vmap_dummy_args": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 42}, "pangolin.interface.vmap.vmap_subgraph": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 113}, "pangolin.interface.vmap.vmap_eval": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 45}, "pangolin.interface.vmap.vmap_flat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 22}, "pangolin.interface.vmap.plate": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 635}, "pangolin.ir": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 123}, "pangolin.ir.Op": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 149}, "pangolin.ir.Op.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 56}, "pangolin.ir.Op.name": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "pangolin.ir.Op.random": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pangolin.ir.Op.get_shape": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 100}, "pangolin.ir.RV": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 19}, "pangolin.ir.RV.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 16}, "pangolin.ir.RV.op": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pangolin.ir.RV.shape": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pangolin.ir.RV.ndim": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "pangolin.ir.Constant": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 37}, "pangolin.ir.Constant.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 39}, "pangolin.ir.Constant.value": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pangolin.ir.VMap": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 22}, "pangolin.ir.VMap.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 152}, "pangolin.ir.VMap.base_op": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.VMap.in_axes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.VMap.axis_size": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Add": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Index": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 45}, "pangolin.ir.Index.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 69}, "pangolin.ir.Index.slices": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Index.advanced_at_start": {"qualname": 4, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 72}, "pangolin.ir.Composite": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 30}, "pangolin.ir.Composite.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 134, "bases": 0, "doc": 56}, "pangolin.ir.Composite.num_inputs": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Composite.ops": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Composite.par_nums": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Autoregressive": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 149}, "pangolin.ir.Autoregressive.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 30}, "pangolin.ir.Autoregressive.base_op": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Autoregressive.length": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Autoregressive.in_axes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.Autoregressive.where_self": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.constant": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.constant.Constant": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 37}, "pangolin.ir.constant.Constant.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 39}, "pangolin.ir.constant.Constant.value": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pangolin.ir.index": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 1226}, "pangolin.ir.index.Index": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 45}, "pangolin.ir.index.Index.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 69}, "pangolin.ir.index.Index.slices": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.index.Index.advanced_at_start": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 72}, "pangolin.ir.multivariate_dists": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.multivariate_dists.VecMatOp": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 30}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 56}, "pangolin.ir.multivariate_dists.MultiNormal": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "pangolin.ir.multivariate_dists.Categorical": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 15}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "pangolin.ir.multivariate_dists.Multinomial": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 28}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 24}, "pangolin.ir.multivariate_dists.Dirichlet": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 10}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "pangolin.ir.multivariate_funs": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "pangolin.ir.multivariate_funs.MatMul": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 25}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 56}, "pangolin.ir.multivariate_funs.Inv": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 9}, "pangolin.ir.multivariate_funs.Inv.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 56}, "pangolin.ir.multivariate_funs.Softmax": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 3}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 56}, "pangolin.ir.multivariate_funs.Sum": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "pangolin.ir.multivariate_funs.Sum.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 26}, "pangolin.ir.multivariate_funs.Sum.axis": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.op": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.op.Op": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 149}, "pangolin.ir.op.Op.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 56}, "pangolin.ir.op.Op.name": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "pangolin.ir.op.Op.random": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pangolin.ir.op.Op.get_shape": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 100}, "pangolin.ir.rv": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.rv.RV": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 19}, "pangolin.ir.rv.RV.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 16}, "pangolin.ir.rv.RV.op": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pangolin.ir.rv.RV.shape": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pangolin.ir.rv.RV.ndim": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "pangolin.ir.scalar_ops": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 394}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 93}, "pangolin.ir.scalar_ops.Cauchy": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 16}, "pangolin.ir.scalar_ops.Normal": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.NormalPrec": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.LogNormal": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Bernoulli": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.BernoulliLogit": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Binomial": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Uniform": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Beta": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Exponential": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Gamma": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Poisson": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.BetaBinomial": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.StudentT": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Add": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Sub": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Mul": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Div": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Pow": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Abs": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Arccos": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Arccosh": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Arcsin": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Arcsinh": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Arctan": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Arctanh": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Cos": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Cosh": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Exp": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.InvLogit": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Log": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Loggamma": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 17}, "pangolin.ir.scalar_ops.Logit": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Sin": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Sinh": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Step": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Tan": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.scalar_ops.Tanh": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.vmap": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.vmap.VMap": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 22}, "pangolin.ir.vmap.VMap.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 152}, "pangolin.ir.vmap.VMap.base_op": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.vmap.VMap.in_axes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.vmap.VMap.axis_size": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pangolin.ir.vmap.split_shape": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pangolin.ir.vmap.get_sliced_shapes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}}, "length": 295, "save": true}, "index": {"qualname": {"root": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 27, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.VMap.base_op": {"tf": 1}, "pangolin.ir.VMap.in_axes": {"tf": 1}, "pangolin.ir.VMap.axis_size": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1}}, "df": 18}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.numpyro.var": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.VMap.in_axes": {"tf": 1}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.index": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Index.slices": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.slices": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 9}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 27}}, "v": {"docs": {"pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.inv_logit": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.scalar_ops.InvLogit": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Composite.num_inputs": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate": {"tf": 1}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1}, "pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1}}, "df": 8}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.composite": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.composite.composite_flat": {"tf": 1}, "pangolin.interface.composite.composite": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Composite.num_inputs": {"tf": 1}, "pangolin.ir.Composite.ops": {"tf": 1}, "pangolin.ir.Composite.par_nums": {"tf": 1}}, "df": 9}}}}}}}, "s": {"docs": {"pangolin.interface.cos": {"tf": 1}, "pangolin.interface.interface.cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.cosh": {"tf": 1}, "pangolin.interface.interface.cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.vmap.check_tree_consistency": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}}, "df": 6}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.create_rv": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pangolin.interface.vmap.check_tree_consistency": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.inference.inference_util.Calculate.std": {"tf": 1}, "pangolin.inference.numpyro.std": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 2, "t": {"docs": {"pangolin.ir.scalar_ops.StudentT": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.step": {"tf": 1}, "pangolin.interface.interface.step": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.interface.standard_makerv": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.slot": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Index.slices": {"tf": 1}, "pangolin.ir.index.Index.slices": {"tf": 1}}, "df": 2}, "d": {"docs": {"pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"pangolin.interface.sub": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1}}, "df": 5}}, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.sqrt": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"pangolin.interface.sin": {"tf": 1}, "pangolin.interface.interface.sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.sinh": {"tf": 1}, "pangolin.interface.interface.sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}}, "df": 3}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.VMap.axis_size": {"tf": 1}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.SetRVFactory": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1}}, "df": 3}}}}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"pangolin.ir.Autoregressive.where_self": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.AbstractOp.shape": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1}, "pangolin.ir.vmap.split_shape": {"tf": 1}}, "df": 6, "s": {"docs": {"pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.vmap.split_shape": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.composite.composite_flat": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.FlatCallable": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.rv_factories": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.interface.interface.makerv_funs": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.VMap.base_op": {"tf": 1}, "pangolin.ir.Autoregressive.base_op": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1}}, "df": 16, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.non_operator_rv": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.OperatorRV.n": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.n": {"tf": 1}}, "df": 6}}}}}}}}, "s": {"docs": {"pangolin.ir.Composite.ops": {"tf": 1}}, "df": 1}}, "r": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1}}, "df": 2, "x": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.exp": {"tf": 1}, "pangolin.interface.interface.exp": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.expit": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.vmap.vmap_eval": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.base_op": {"tf": 1}, "pangolin.ir.Autoregressive.length": {"tf": 1}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1}, "pangolin.ir.Autoregressive.where_self": {"tf": 1}}, "df": 9}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.add": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}}, "df": 4}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.abs": {"tf": 1}, "pangolin.interface.interface.abs": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.shape": {"tf": 1}}, "df": 3}}}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.arccos": {"tf": 1}, "pangolin.interface.interface.arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.arccosh": {"tf": 1}, "pangolin.interface.interface.arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.arcsin": {"tf": 1}, "pangolin.interface.interface.arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.arcsinh": {"tf": 1}, "pangolin.interface.interface.arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.arctan": {"tf": 1}, "pangolin.interface.interface.arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.arctanh": {"tf": 1}, "pangolin.interface.interface.arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}, "pangolin.interface.interface.api": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.ir.VMap.in_axes": {"tf": 1}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.VMap.axis_size": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.Loop.length": {"tf": 1}}, "df": 4, "s": {"docs": {"pangolin.interface.Loop.loops": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.log": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.log": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.logit": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.inv_logit": {"tf": 1}, "pangolin.interface.interface.logit": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.scalar_ops.LogNormal": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.interface.Loop.length": {"tf": 1}, "pangolin.ir.Autoregressive.length": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.print_upstream": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {"pangolin.interface.pow": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.plate": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.Composite.par_nums": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.print_upstream": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}}, "df": 3}}}}}}}, "n": {"docs": {"pangolin.interface.OperatorRV.n": {"tf": 1}, "pangolin.interface.interface.OperatorRV.n": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"pangolin.interface.interface.non_operator_rv": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.ir.Composite.num_inputs": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.ir.Composite.par_nums": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.makerv_funs": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.mul": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.VMap.base_op": {"tf": 1}, "pangolin.ir.Autoregressive.base_op": {"tf": 1}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.tan": {"tf": 1}, "pangolin.interface.interface.tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.tanh": {"tf": 1}, "pangolin.interface.interface.tanh": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.check_tree_consistency": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.div": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}}, "df": 4}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.rv_factories": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1}, "pangolin.interface.interface.non_operator_rv": {"tf": 1}, "pangolin.interface.interface.create_rv": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}}, "df": 16}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Autoregressive.where_self": {"tf": 1}}, "df": 1}}}}}}}, "fullname": {"root": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 27, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1}, "pangolin.index": {"tf": 1}, "pangolin.inference": {"tf": 1}, "pangolin.inference.inference_util": {"tf": 1}, "pangolin.inference.inference_util.Calculate": {"tf": 1}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1}, "pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1}, "pangolin.inference.numpyro": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1}, "pangolin.inference.numpyro.var": {"tf": 1}, "pangolin.inference.numpyro.std": {"tf": 1}, "pangolin.interface": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.composite": {"tf": 1}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.Loop.length": {"tf": 1}, "pangolin.interface.slot": {"tf": 1}, "pangolin.interface.print_upstream": {"tf": 1}, "pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.OperatorRV.n": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.add": {"tf": 1}, "pangolin.interface.sub": {"tf": 1}, "pangolin.interface.mul": {"tf": 1}, "pangolin.interface.div": {"tf": 1}, "pangolin.interface.pow": {"tf": 1}, "pangolin.interface.sqrt": {"tf": 1}, "pangolin.interface.abs": {"tf": 1}, "pangolin.interface.arccos": {"tf": 1}, "pangolin.interface.arccosh": {"tf": 1}, "pangolin.interface.arcsin": {"tf": 1}, "pangolin.interface.arcsinh": {"tf": 1}, "pangolin.interface.arctan": {"tf": 1}, "pangolin.interface.arctanh": {"tf": 1}, "pangolin.interface.cos": {"tf": 1}, "pangolin.interface.cosh": {"tf": 1}, "pangolin.interface.exp": {"tf": 1}, "pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.log": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.logit": {"tf": 1}, "pangolin.interface.sin": {"tf": 1}, "pangolin.interface.sinh": {"tf": 1}, "pangolin.interface.step": {"tf": 1}, "pangolin.interface.tan": {"tf": 1}, "pangolin.interface.tanh": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.composite.composite_flat": {"tf": 1}, "pangolin.interface.composite.composite": {"tf": 1}, "pangolin.interface.interface": {"tf": 1}, "pangolin.interface.interface.RV_or_array": {"tf": 1}, "pangolin.interface.interface.for_api": {"tf": 1}, "pangolin.interface.interface.api": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.n": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.rv_factories": {"tf": 1}, "pangolin.interface.interface.SetRVFactory": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1}, "pangolin.interface.interface.non_operator_rv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.makerv_funs": {"tf": 1}, "pangolin.interface.interface.create_rv": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1}, "pangolin.interface.interface.abs": {"tf": 1}, "pangolin.interface.interface.arccos": {"tf": 1}, "pangolin.interface.interface.arccosh": {"tf": 1}, "pangolin.interface.interface.arcsin": {"tf": 1}, "pangolin.interface.interface.arcsinh": {"tf": 1}, "pangolin.interface.interface.arctan": {"tf": 1}, "pangolin.interface.interface.arctanh": {"tf": 1}, "pangolin.interface.interface.cos": {"tf": 1}, "pangolin.interface.interface.cosh": {"tf": 1}, "pangolin.interface.interface.exp": {"tf": 1}, "pangolin.interface.interface.inv_logit": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.log": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.logit": {"tf": 1}, "pangolin.interface.interface.sin": {"tf": 1}, "pangolin.interface.interface.sinh": {"tf": 1}, "pangolin.interface.interface.step": {"tf": 1}, "pangolin.interface.interface.tan": {"tf": 1}, "pangolin.interface.interface.tanh": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.FlatCallable": {"tf": 1}, "pangolin.interface.vmap.check_tree_consistency": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.shape": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.VMap.base_op": {"tf": 1}, "pangolin.ir.VMap.in_axes": {"tf": 1}, "pangolin.ir.VMap.axis_size": {"tf": 1}, "pangolin.ir.Add": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Index.slices": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Composite.num_inputs": {"tf": 1}, "pangolin.ir.Composite.ops": {"tf": 1}, "pangolin.ir.Composite.par_nums": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.base_op": {"tf": 1}, "pangolin.ir.Autoregressive.length": {"tf": 1}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1}, "pangolin.ir.Autoregressive.where_self": {"tf": 1}, "pangolin.ir.constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.slices": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1}, "pangolin.ir.op": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}, "pangolin.ir.vmap": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1}, "pangolin.ir.vmap.split_shape": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 295}}}}}}, "r": {"docs": {"pangolin.ir.Composite.par_nums": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.print_upstream": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {"pangolin.interface.pow": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.plate": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.FlatCallable": {"tf": 1}, "pangolin.interface.vmap.check_tree_consistency": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.shape": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_eval": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.VMap.base_op": {"tf": 1}, "pangolin.ir.VMap.in_axes": {"tf": 1}, "pangolin.ir.VMap.axis_size": {"tf": 1}, "pangolin.ir.vmap": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.split_shape": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 30}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.numpyro.var": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.VMap.in_axes": {"tf": 1}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.index": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Index.slices": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.slices": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.4142135623730951}}, "df": 10}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference": {"tf": 1}, "pangolin.inference.inference_util": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1}, "pangolin.inference.numpyro.var": {"tf": 1}, "pangolin.inference.numpyro.std": {"tf": 1}}, "df": 16}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 27}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.composite": {"tf": 1}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.Loop.length": {"tf": 1}, "pangolin.interface.slot": {"tf": 1}, "pangolin.interface.print_upstream": {"tf": 1}, "pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.OperatorRV.n": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.add": {"tf": 1}, "pangolin.interface.sub": {"tf": 1}, "pangolin.interface.mul": {"tf": 1}, "pangolin.interface.div": {"tf": 1}, "pangolin.interface.pow": {"tf": 1}, "pangolin.interface.sqrt": {"tf": 1}, "pangolin.interface.abs": {"tf": 1}, "pangolin.interface.arccos": {"tf": 1}, "pangolin.interface.arccosh": {"tf": 1}, "pangolin.interface.arcsin": {"tf": 1}, "pangolin.interface.arcsinh": {"tf": 1}, "pangolin.interface.arctan": {"tf": 1}, "pangolin.interface.arctanh": {"tf": 1}, "pangolin.interface.cos": {"tf": 1}, "pangolin.interface.cosh": {"tf": 1}, "pangolin.interface.exp": {"tf": 1}, "pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.log": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.logit": {"tf": 1}, "pangolin.interface.sin": {"tf": 1}, "pangolin.interface.sinh": {"tf": 1}, "pangolin.interface.step": {"tf": 1}, "pangolin.interface.tan": {"tf": 1}, "pangolin.interface.tanh": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.composite.composite_flat": {"tf": 1}, "pangolin.interface.composite.composite": {"tf": 1}, "pangolin.interface.interface": {"tf": 1.4142135623730951}, "pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}, "pangolin.interface.interface.for_api": {"tf": 1.4142135623730951}, "pangolin.interface.interface.api": {"tf": 1.4142135623730951}, "pangolin.interface.interface.OperatorRV": {"tf": 1.4142135623730951}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.interface.OperatorRV.n": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factory": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factories": {"tf": 1.4142135623730951}, "pangolin.interface.interface.SetRVFactory": {"tf": 1.4142135623730951}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1.4142135623730951}, "pangolin.interface.interface.non_operator_rv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.standard_makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv_funs": {"tf": 1.4142135623730951}, "pangolin.interface.interface.create_rv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal_prec": {"tf": 1.4142135623730951}, "pangolin.interface.interface.log_normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.cauchy": {"tf": 1.4142135623730951}, "pangolin.interface.interface.bernoulli": {"tf": 1.4142135623730951}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.uniform": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.exponential": {"tf": 1.4142135623730951}, "pangolin.interface.interface.gamma": {"tf": 1.4142135623730951}, "pangolin.interface.interface.poisson": {"tf": 1.4142135623730951}, "pangolin.interface.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1.4142135623730951}, "pangolin.interface.interface.add": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sub": {"tf": 1.4142135623730951}, "pangolin.interface.interface.mul": {"tf": 1.4142135623730951}, "pangolin.interface.interface.div": {"tf": 1.4142135623730951}, "pangolin.interface.interface.pow": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sqrt": {"tf": 1.4142135623730951}, "pangolin.interface.interface.abs": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arccos": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arccosh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arcsin": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arcsinh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arctan": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arctanh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.cos": {"tf": 1.4142135623730951}, "pangolin.interface.interface.cosh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.exp": {"tf": 1.4142135623730951}, "pangolin.interface.interface.inv_logit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.expit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sigmoid": {"tf": 1.4142135623730951}, "pangolin.interface.interface.log": {"tf": 1.4142135623730951}, "pangolin.interface.interface.log_gamma": {"tf": 1.4142135623730951}, "pangolin.interface.interface.logit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sin": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sinh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.step": {"tf": 1.4142135623730951}, "pangolin.interface.interface.tan": {"tf": 1.4142135623730951}, "pangolin.interface.interface.tanh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.multi_normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.categorical": {"tf": 1.4142135623730951}, "pangolin.interface.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.dirichlet": {"tf": 1.4142135623730951}, "pangolin.interface.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.interface.inv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.softmax": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.FlatCallable": {"tf": 1}, "pangolin.interface.vmap.check_tree_consistency": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.shape": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}}, "df": 151}}}}}}}, "v": {"docs": {"pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.inv_logit": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.scalar_ops.InvLogit": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Composite.num_inputs": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.VMap.base_op": {"tf": 1}, "pangolin.ir.VMap.in_axes": {"tf": 1}, "pangolin.ir.VMap.axis_size": {"tf": 1}, "pangolin.ir.Add": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Index.slices": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Composite.num_inputs": {"tf": 1}, "pangolin.ir.Composite.ops": {"tf": 1}, "pangolin.ir.Composite.par_nums": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.base_op": {"tf": 1}, "pangolin.ir.Autoregressive.length": {"tf": 1}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1}, "pangolin.ir.Autoregressive.where_self": {"tf": 1}, "pangolin.ir.constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.slices": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1}, "pangolin.ir.op": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}, "pangolin.ir.vmap": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1}, "pangolin.ir.vmap.split_shape": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 125}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.inference.inference_util": {"tf": 1}, "pangolin.inference.inference_util.Calculate": {"tf": 1}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1}, "pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1}}, "df": 9}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.print_upstream": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate": {"tf": 1}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1}, "pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1}}, "df": 8}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.composite": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}, "pangolin.interface.composite.composite_flat": {"tf": 1.4142135623730951}, "pangolin.interface.composite.composite": {"tf": 1.4142135623730951}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Composite.num_inputs": {"tf": 1}, "pangolin.ir.Composite.ops": {"tf": 1}, "pangolin.ir.Composite.par_nums": {"tf": 1}}, "df": 9}}}}}}}, "s": {"docs": {"pangolin.interface.cos": {"tf": 1}, "pangolin.interface.interface.cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.cosh": {"tf": 1}, "pangolin.interface.interface.cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.vmap.check_tree_consistency": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.value": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.create_rv": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pangolin.interface.vmap.check_tree_consistency": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.inference.inference_util.Calculate.std": {"tf": 1}, "pangolin.inference.numpyro.std": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 2, "t": {"docs": {"pangolin.ir.scalar_ops.StudentT": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.step": {"tf": 1}, "pangolin.interface.interface.step": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.interface.standard_makerv": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.slot": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Index.slices": {"tf": 1}, "pangolin.ir.index.Index.slices": {"tf": 1}}, "df": 2}, "d": {"docs": {"pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"pangolin.interface.sub": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1}}, "df": 5}}, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.sqrt": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"pangolin.interface.sin": {"tf": 1}, "pangolin.interface.interface.sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.sinh": {"tf": 1}, "pangolin.interface.interface.sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}}, "df": 3}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.VMap.axis_size": {"tf": 1}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.SetRVFactory": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1}}, "df": 3}}}}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"pangolin.ir.Autoregressive.where_self": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 41}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.AbstractOp.shape": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1}, "pangolin.ir.vmap.split_shape": {"tf": 1}}, "df": 6, "s": {"docs": {"pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.vmap.split_shape": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.composite.composite_flat": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.FlatCallable": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.rv_factories": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.interface.interface.makerv_funs": {"tf": 1}, "pangolin.ir.multivariate_funs": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1}}, "df": 11}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.VMap.base_op": {"tf": 1}, "pangolin.ir.Autoregressive.base_op": {"tf": 1}, "pangolin.ir.op": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.name": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.random": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1}}, "df": 17, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.non_operator_rv": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.OperatorRV.n": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.n": {"tf": 1}}, "df": 6}}}}}}}}, "s": {"docs": {"pangolin.ir.Composite.ops": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 41}}, "r": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1}}, "df": 2, "x": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.exp": {"tf": 1}, "pangolin.interface.interface.exp": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.expit": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.vmap.vmap_eval": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"pangolin.interface.OperatorRV.n": {"tf": 1}, "pangolin.interface.interface.OperatorRV.n": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.ir.Composite.num_inputs": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pangolin.inference.numpyro": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1}, "pangolin.inference.numpyro.var": {"tf": 1}, "pangolin.inference.numpyro.std": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"pangolin.ir.Composite.par_nums": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"pangolin.interface.interface.non_operator_rv": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1.4142135623730951}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1.4142135623730951}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.base_op": {"tf": 1}, "pangolin.ir.Autoregressive.length": {"tf": 1}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1}, "pangolin.ir.Autoregressive.where_self": {"tf": 1}}, "df": 10}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.add": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}}, "df": 4}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.abs": {"tf": 1}, "pangolin.interface.interface.abs": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.shape": {"tf": 1}}, "df": 3}}}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.arccos": {"tf": 1}, "pangolin.interface.interface.arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.arccosh": {"tf": 1}, "pangolin.interface.interface.arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.arcsin": {"tf": 1}, "pangolin.interface.interface.arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.arcsinh": {"tf": 1}, "pangolin.interface.interface.arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.arctan": {"tf": 1}, "pangolin.interface.interface.arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.arctanh": {"tf": 1}, "pangolin.interface.interface.arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}, "pangolin.interface.interface.api": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.ir.VMap.in_axes": {"tf": 1}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.VMap.axis_size": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.Loop.length": {"tf": 1}}, "df": 4, "s": {"docs": {"pangolin.interface.Loop.loops": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.log": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.log": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.logit": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.inv_logit": {"tf": 1}, "pangolin.interface.interface.logit": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.scalar_ops.LogNormal": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.interface.Loop.length": {"tf": 1}, "pangolin.ir.Autoregressive.length": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.makerv_funs": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.mul": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.multivariate_dists": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1}}, "df": 21}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.VMap.base_op": {"tf": 1}, "pangolin.ir.Autoregressive.base_op": {"tf": 1}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.tan": {"tf": 1}, "pangolin.interface.interface.tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}}, "df": 3, "h": {"docs": {"pangolin.interface.tanh": {"tf": 1}, "pangolin.interface.interface.tanh": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.check_tree_consistency": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.div": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.multivariate_dists": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}}, "df": 11}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.rv_factories": {"tf": 1}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1}, "pangolin.interface.interface.non_operator_rv": {"tf": 1}, "pangolin.interface.interface.create_rv": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.rv": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.op": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.shape": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.ndim": {"tf": 1.4142135623730951}}, "df": 17}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Autoregressive.where_self": {"tf": 1}}, "df": 1}}}}}}}, "annotation": {"root": {"docs": {"pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.Loop.length": {"tf": 1.4142135623730951}, "pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pangolin.interface.Loop.loops": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.Loop.length": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.Loop.length": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}}, "df": 4}}}}}}, "default_value": {"root": {"1": {"docs": {"pangolin.interface.OperatorRV.n": {"tf": 1}, "pangolin.interface.interface.OperatorRV.n": {"tf": 1}}, "df": 2}, "docs": {"pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.interface.RV_or_array": {"tf": 2.23606797749979}, "pangolin.interface.interface.for_api": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factories": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv_funs": {"tf": 1.4142135623730951}, "pangolin.ir.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Normal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Beta": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sub": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Mul": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Div": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Pow": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Abs": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exp": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Log": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Logit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Step": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1.4142135623730951}}, "df": 44, "t": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 2.23606797749979}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "h": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}, "pangolin.interface.vmap.FlatCallable": {"tf": 1}}, "df": 2}, "s": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "h": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "h": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "h": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 39, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 39}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.for_api": {"tf": 2}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.vmap.FlatCallable": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1.7320508075688772}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 39}}}}}, "t": {"docs": {"pangolin.interface.interface.rv_factories": {"tf": 1}, "pangolin.interface.interface.makerv_funs": {"tf": 1}, "pangolin.ir.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Normal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Beta": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sub": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Mul": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Div": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Pow": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Abs": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exp": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Log": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Logit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Step": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1.4142135623730951}}, "df": 41}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}, "b": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}, "m": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.interface.makerv_funs": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "h": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Normal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Beta": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sub": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Mul": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Div": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Pow": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Abs": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exp": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Log": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Logit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Step": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1.4142135623730951}}, "df": 39}}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.rv_factories": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "v": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}, "pangolin.interface.vmap.FlatCallable": {"tf": 1}, "pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 41}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.makerv_funs": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 39}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "h": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.FlatCallable": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.FlatCallable": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.rv_factories": {"tf": 1}, "pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 40}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1}, "pangolin.interface.interface.rv_factories": {"tf": 1}, "pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 41}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.interface.RV_or_array": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.FlatCallable": {"tf": 1.4142135623730951}}, "df": 2}}, "x": {"2": {"7": {"docs": {"pangolin.interface.interface.for_api": {"tf": 10.099504938362077}, "pangolin.interface.interface.rv_factories": {"tf": 1.4142135623730951}, "pangolin.ir.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Normal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Beta": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sub": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Mul": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Div": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Pow": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Abs": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exp": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Log": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Logit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Step": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1.4142135623730951}}, "df": 41}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}, "pangolin.interface.interface.makerv_funs": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {"pangolin.interface.interface.rv_factories": {"tf": 1}, "pangolin.interface.interface.makerv_funs": {"tf": 1}, "pangolin.ir.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Normal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Beta": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Add": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sub": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Mul": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Div": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Pow": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Abs": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cos": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Exp": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Log": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Logit": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sin": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Step": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tan": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1.4142135623730951}}, "df": 41}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.interface.for_api": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 39, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.interface.rv_factories": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"pangolin.ir.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Normal": {"tf": 1}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1}, "pangolin.ir.scalar_ops.Beta": {"tf": 1}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1}, "pangolin.ir.scalar_ops.Add": {"tf": 1}, "pangolin.ir.scalar_ops.Sub": {"tf": 1}, "pangolin.ir.scalar_ops.Mul": {"tf": 1}, "pangolin.ir.scalar_ops.Div": {"tf": 1}, "pangolin.ir.scalar_ops.Pow": {"tf": 1}, "pangolin.ir.scalar_ops.Abs": {"tf": 1}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1}, "pangolin.ir.scalar_ops.Cos": {"tf": 1}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1}, "pangolin.ir.scalar_ops.Exp": {"tf": 1}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1}, "pangolin.ir.scalar_ops.Log": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.scalar_ops.Logit": {"tf": 1}, "pangolin.ir.scalar_ops.Sin": {"tf": 1}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1}, "pangolin.ir.scalar_ops.Step": {"tf": 1}, "pangolin.ir.scalar_ops.Tan": {"tf": 1}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1}}, "df": 39}}}}}, "signature": {"root": {"0": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}}, "df": 8}, "1": {"0": {"0": {"0": {"0": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pangolin.vmap": {"tf": 8.06225774829855}, "pangolin.index": {"tf": 7.280109889280518}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 3.7416573867739413}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 7.0710678118654755}, "pangolin.inference.inference_util.Calculate.E": {"tf": 6}, "pangolin.inference.inference_util.Calculate.var": {"tf": 6}, "pangolin.inference.inference_util.Calculate.std": {"tf": 6}, "pangolin.inference.numpyro.sample": {"tf": 6.324555320336759}, "pangolin.inference.numpyro.sample_flat": {"tf": 16.583123951777}, "pangolin.inference.numpyro.E": {"tf": 5.656854249492381}, "pangolin.inference.numpyro.var": {"tf": 5.656854249492381}, "pangolin.inference.numpyro.std": {"tf": 5.656854249492381}, "pangolin.interface.vmap": {"tf": 8.06225774829855}, "pangolin.interface.composite": {"tf": 3.1622776601683795}, "pangolin.interface.autoregressive": {"tf": 6.4031242374328485}, "pangolin.interface.Loop.__init__": {"tf": 3.4641016151377544}, "pangolin.interface.slot": {"tf": 2.6457513110645907}, "pangolin.interface.print_upstream": {"tf": 3.4641016151377544}, "pangolin.interface.OperatorRV.__init__": {"tf": 3.7416573867739413}, "pangolin.interface.makerv": {"tf": 4.898979485566356}, "pangolin.interface.normal": {"tf": 19.849433241279208}, "pangolin.interface.normal_prec": {"tf": 5.291502622129181}, "pangolin.interface.log_normal": {"tf": 5.291502622129181}, "pangolin.interface.cauchy": {"tf": 5.291502622129181}, "pangolin.interface.bernoulli": {"tf": 4.898979485566356}, "pangolin.interface.bernoulli_logit": {"tf": 4.898979485566356}, "pangolin.interface.binomial": {"tf": 5.291502622129181}, "pangolin.interface.uniform": {"tf": 5.291502622129181}, "pangolin.interface.beta": {"tf": 5.291502622129181}, "pangolin.interface.beta_binomial": {"tf": 5.656854249492381}, "pangolin.interface.exponential": {"tf": 4.898979485566356}, "pangolin.interface.gamma": {"tf": 5.291502622129181}, "pangolin.interface.poisson": {"tf": 4.898979485566356}, "pangolin.interface.student_t": {"tf": 5.656854249492381}, "pangolin.interface.add": {"tf": 3.4641016151377544}, "pangolin.interface.sub": {"tf": 3.4641016151377544}, "pangolin.interface.mul": {"tf": 3.4641016151377544}, "pangolin.interface.div": {"tf": 3.4641016151377544}, "pangolin.interface.pow": {"tf": 3.4641016151377544}, "pangolin.interface.sqrt": {"tf": 3.4641016151377544}, "pangolin.interface.abs": {"tf": 3.4641016151377544}, "pangolin.interface.arccos": {"tf": 4.898979485566356}, "pangolin.interface.arccosh": {"tf": 4.898979485566356}, "pangolin.interface.arcsin": {"tf": 4.898979485566356}, "pangolin.interface.arcsinh": {"tf": 4.898979485566356}, "pangolin.interface.arctan": {"tf": 4.898979485566356}, "pangolin.interface.arctanh": {"tf": 4.898979485566356}, "pangolin.interface.cos": {"tf": 4.898979485566356}, "pangolin.interface.cosh": {"tf": 4.898979485566356}, "pangolin.interface.exp": {"tf": 4.898979485566356}, "pangolin.interface.inv_logit": {"tf": 4.898979485566356}, "pangolin.interface.expit": {"tf": 4.898979485566356}, "pangolin.interface.sigmoid": {"tf": 4.898979485566356}, "pangolin.interface.log": {"tf": 4.898979485566356}, "pangolin.interface.log_gamma": {"tf": 4.898979485566356}, "pangolin.interface.logit": {"tf": 4.898979485566356}, "pangolin.interface.sin": {"tf": 4.898979485566356}, "pangolin.interface.sinh": {"tf": 4.898979485566356}, "pangolin.interface.step": {"tf": 4.898979485566356}, "pangolin.interface.tan": {"tf": 4.898979485566356}, "pangolin.interface.tanh": {"tf": 4.898979485566356}, "pangolin.interface.multi_normal": {"tf": 5.291502622129181}, "pangolin.interface.categorical": {"tf": 4.898979485566356}, "pangolin.interface.multinomial": {"tf": 5.291502622129181}, "pangolin.interface.dirichlet": {"tf": 4.898979485566356}, "pangolin.interface.matmul": {"tf": 5.291502622129181}, "pangolin.interface.inv": {"tf": 4.898979485566356}, "pangolin.interface.softmax": {"tf": 4.898979485566356}, "pangolin.interface.sum": {"tf": 7.0710678118654755}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 5.0990195135927845}, "pangolin.interface.autoregressive.autoregressive": {"tf": 6.4031242374328485}, "pangolin.interface.autoregressive.repeat": {"tf": 4.69041575982343}, "pangolin.interface.composite.make_composite": {"tf": 4}, "pangolin.interface.composite.composite_flat": {"tf": 3.1622776601683795}, "pangolin.interface.composite.composite": {"tf": 3.1622776601683795}, "pangolin.interface.interface.api": {"tf": 3.1622776601683795}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 3.7416573867739413}, "pangolin.interface.interface.rv_factory": {"tf": 5.477225575051661}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 2.8284271247461903}, "pangolin.interface.interface.non_operator_rv": {"tf": 3.1622776601683795}, "pangolin.interface.interface.makerv": {"tf": 4.898979485566356}, "pangolin.interface.interface.standard_makerv": {"tf": 4.898979485566356}, "pangolin.interface.interface.create_rv": {"tf": 4}, "pangolin.interface.interface.normal": {"tf": 19.849433241279208}, "pangolin.interface.interface.normal_prec": {"tf": 5.291502622129181}, "pangolin.interface.interface.log_normal": {"tf": 5.291502622129181}, "pangolin.interface.interface.cauchy": {"tf": 5.291502622129181}, "pangolin.interface.interface.bernoulli": {"tf": 4.898979485566356}, "pangolin.interface.interface.bernoulli_logit": {"tf": 4.898979485566356}, "pangolin.interface.interface.binomial": {"tf": 5.291502622129181}, "pangolin.interface.interface.uniform": {"tf": 5.291502622129181}, "pangolin.interface.interface.beta": {"tf": 5.291502622129181}, "pangolin.interface.interface.beta_binomial": {"tf": 5.656854249492381}, "pangolin.interface.interface.exponential": {"tf": 4.898979485566356}, "pangolin.interface.interface.gamma": {"tf": 5.291502622129181}, "pangolin.interface.interface.poisson": {"tf": 4.898979485566356}, "pangolin.interface.interface.student_t": {"tf": 5.656854249492381}, "pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 3.1622776601683795}, "pangolin.interface.interface.add": {"tf": 3.4641016151377544}, "pangolin.interface.interface.sub": {"tf": 3.4641016151377544}, "pangolin.interface.interface.mul": {"tf": 3.4641016151377544}, "pangolin.interface.interface.div": {"tf": 3.4641016151377544}, "pangolin.interface.interface.pow": {"tf": 3.4641016151377544}, "pangolin.interface.interface.sqrt": {"tf": 3.4641016151377544}, "pangolin.interface.interface.abs": {"tf": 3.4641016151377544}, "pangolin.interface.interface.arccos": {"tf": 4.898979485566356}, "pangolin.interface.interface.arccosh": {"tf": 4.898979485566356}, "pangolin.interface.interface.arcsin": {"tf": 4.898979485566356}, "pangolin.interface.interface.arcsinh": {"tf": 4.898979485566356}, "pangolin.interface.interface.arctan": {"tf": 4.898979485566356}, "pangolin.interface.interface.arctanh": {"tf": 4.898979485566356}, "pangolin.interface.interface.cos": {"tf": 4.898979485566356}, "pangolin.interface.interface.cosh": {"tf": 4.898979485566356}, "pangolin.interface.interface.exp": {"tf": 4.898979485566356}, "pangolin.interface.interface.inv_logit": {"tf": 4.898979485566356}, "pangolin.interface.interface.expit": {"tf": 4.898979485566356}, "pangolin.interface.interface.sigmoid": {"tf": 4.898979485566356}, "pangolin.interface.interface.log": {"tf": 4.898979485566356}, "pangolin.interface.interface.log_gamma": {"tf": 4.898979485566356}, "pangolin.interface.interface.logit": {"tf": 4.898979485566356}, "pangolin.interface.interface.sin": {"tf": 4.898979485566356}, "pangolin.interface.interface.sinh": {"tf": 4.898979485566356}, "pangolin.interface.interface.step": {"tf": 4.898979485566356}, "pangolin.interface.interface.tan": {"tf": 4.898979485566356}, "pangolin.interface.interface.tanh": {"tf": 4.898979485566356}, "pangolin.interface.interface.multi_normal": {"tf": 5.291502622129181}, "pangolin.interface.interface.categorical": {"tf": 4.898979485566356}, "pangolin.interface.interface.multinomial": {"tf": 5.291502622129181}, "pangolin.interface.interface.dirichlet": {"tf": 4.898979485566356}, "pangolin.interface.interface.matmul": {"tf": 5.291502622129181}, "pangolin.interface.interface.inv": {"tf": 4.898979485566356}, "pangolin.interface.interface.softmax": {"tf": 4.898979485566356}, "pangolin.interface.interface.sum": {"tf": 7.0710678118654755}, "pangolin.interface.vmap.check_tree_consistency": {"tf": 3.4641016151377544}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 3.7416573867739413}, "pangolin.interface.vmap.vmap": {"tf": 8.06225774829855}, "pangolin.interface.vmap.convert_args": {"tf": 7.280109889280518}, "pangolin.interface.vmap.generated_nodes": {"tf": 10.344080432788601}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 10.344080432788601}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 5.656854249492381}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 7.874007874011811}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 6}, "pangolin.interface.vmap.vmap_eval": {"tf": 4.898979485566356}, "pangolin.interface.vmap.vmap_flat": {"tf": 9.055385138137417}, "pangolin.interface.vmap.plate": {"tf": 6.244997998398398}, "pangolin.ir.Op.__init__": {"tf": 4.47213595499958}, "pangolin.ir.Op.get_shape": {"tf": 4}, "pangolin.ir.RV.__init__": {"tf": 4.242640687119285}, "pangolin.ir.Constant.__init__": {"tf": 2.8284271247461903}, "pangolin.ir.VMap.__init__": {"tf": 9.643650760992955}, "pangolin.ir.Index.__init__": {"tf": 4.358898943540674}, "pangolin.ir.Composite.__init__": {"tf": 10.583005244258363}, "pangolin.ir.Autoregressive.__init__": {"tf": 9.486832980505138}, "pangolin.ir.constant.Constant.__init__": {"tf": 2.8284271247461903}, "pangolin.ir.index.Index.__init__": {"tf": 4.358898943540674}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 2.8284271247461903}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 2}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 2}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 2}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 2}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 2}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 2}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 2}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 2.8284271247461903}, "pangolin.ir.op.Op.__init__": {"tf": 4.47213595499958}, "pangolin.ir.op.Op.get_shape": {"tf": 4}, "pangolin.ir.rv.RV.__init__": {"tf": 4.242640687119285}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 4.242640687119285}, "pangolin.ir.vmap.VMap.__init__": {"tf": 9.643650760992955}, "pangolin.ir.vmap.split_shape": {"tf": 3.7416573867739413}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 4.242640687119285}}, "df": 171, "f": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.composite": {"tf": 1}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.composite.composite_flat": {"tf": 1}, "pangolin.interface.composite.composite": {"tf": 1}, "pangolin.interface.interface.api": {"tf": 1}, "pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 11}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}}, "df": 8}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}}}}, "v": {"docs": {"pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}}, "df": 2}}}, "i": {"docs": {"pangolin.ir.vmap.split_shape": {"tf": 1}}, "df": 1, "n": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 16, "t": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 2}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Composite.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.__init__": {"tf": 2}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.7320508075688772}}, "df": 18, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.normal_prec": {"tf": 1.4142135623730951}, "pangolin.interface.log_normal": {"tf": 1.4142135623730951}, "pangolin.interface.cauchy": {"tf": 1.4142135623730951}, "pangolin.interface.bernoulli": {"tf": 1.4142135623730951}, "pangolin.interface.bernoulli_logit": {"tf": 1.4142135623730951}, "pangolin.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.uniform": {"tf": 1.4142135623730951}, "pangolin.interface.beta": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.exponential": {"tf": 1.4142135623730951}, "pangolin.interface.gamma": {"tf": 1.4142135623730951}, "pangolin.interface.poisson": {"tf": 1.4142135623730951}, "pangolin.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.interface.arccos": {"tf": 1.4142135623730951}, "pangolin.interface.arccosh": {"tf": 1.4142135623730951}, "pangolin.interface.arcsin": {"tf": 1.4142135623730951}, "pangolin.interface.arcsinh": {"tf": 1.4142135623730951}, "pangolin.interface.arctan": {"tf": 1.4142135623730951}, "pangolin.interface.arctanh": {"tf": 1.4142135623730951}, "pangolin.interface.cos": {"tf": 1.4142135623730951}, "pangolin.interface.cosh": {"tf": 1.4142135623730951}, "pangolin.interface.exp": {"tf": 1.4142135623730951}, "pangolin.interface.inv_logit": {"tf": 1.4142135623730951}, "pangolin.interface.expit": {"tf": 1.4142135623730951}, "pangolin.interface.sigmoid": {"tf": 1.4142135623730951}, "pangolin.interface.log": {"tf": 1.4142135623730951}, "pangolin.interface.log_gamma": {"tf": 1.4142135623730951}, "pangolin.interface.logit": {"tf": 1.4142135623730951}, "pangolin.interface.sin": {"tf": 1.4142135623730951}, "pangolin.interface.sinh": {"tf": 1.4142135623730951}, "pangolin.interface.step": {"tf": 1.4142135623730951}, "pangolin.interface.tan": {"tf": 1.4142135623730951}, "pangolin.interface.tanh": {"tf": 1.4142135623730951}, "pangolin.interface.multi_normal": {"tf": 1.4142135623730951}, "pangolin.interface.categorical": {"tf": 1.4142135623730951}, "pangolin.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.dirichlet": {"tf": 1.4142135623730951}, "pangolin.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.inv": {"tf": 1.4142135623730951}, "pangolin.interface.softmax": {"tf": 1.4142135623730951}, "pangolin.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factory": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.standard_makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal_prec": {"tf": 1.4142135623730951}, "pangolin.interface.interface.log_normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.cauchy": {"tf": 1.4142135623730951}, "pangolin.interface.interface.bernoulli": {"tf": 1.4142135623730951}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.uniform": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.exponential": {"tf": 1.4142135623730951}, "pangolin.interface.interface.gamma": {"tf": 1.4142135623730951}, "pangolin.interface.interface.poisson": {"tf": 1.4142135623730951}, "pangolin.interface.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arccos": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arccosh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arcsin": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arcsinh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arctan": {"tf": 1.4142135623730951}, "pangolin.interface.interface.arctanh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.cos": {"tf": 1.4142135623730951}, "pangolin.interface.interface.cosh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.exp": {"tf": 1.4142135623730951}, "pangolin.interface.interface.inv_logit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.expit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sigmoid": {"tf": 1.4142135623730951}, "pangolin.interface.interface.log": {"tf": 1.4142135623730951}, "pangolin.interface.interface.log_gamma": {"tf": 1.4142135623730951}, "pangolin.interface.interface.logit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sin": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sinh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.step": {"tf": 1.4142135623730951}, "pangolin.interface.interface.tan": {"tf": 1.4142135623730951}, "pangolin.interface.interface.tanh": {"tf": 1.4142135623730951}, "pangolin.interface.interface.multi_normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.categorical": {"tf": 1.4142135623730951}, "pangolin.interface.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.dirichlet": {"tf": 1.4142135623730951}, "pangolin.interface.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.interface.inv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.softmax": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}}, "df": 88}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.index": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.ir.Composite.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"pangolin.index": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample_flat": {"tf": 1.7320508075688772}, "pangolin.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 2}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 15}}, "a": {"docs": {"pangolin.interface.arccos": {"tf": 1}, "pangolin.interface.arccosh": {"tf": 1}, "pangolin.interface.arcsin": {"tf": 1}, "pangolin.interface.arcsinh": {"tf": 1}, "pangolin.interface.arctan": {"tf": 1}, "pangolin.interface.arctanh": {"tf": 1}, "pangolin.interface.cos": {"tf": 1}, "pangolin.interface.cosh": {"tf": 1}, "pangolin.interface.exp": {"tf": 1}, "pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.log": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.logit": {"tf": 1}, "pangolin.interface.sin": {"tf": 1}, "pangolin.interface.sinh": {"tf": 1}, "pangolin.interface.step": {"tf": 1}, "pangolin.interface.tan": {"tf": 1}, "pangolin.interface.tanh": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.arccos": {"tf": 1}, "pangolin.interface.interface.arccosh": {"tf": 1}, "pangolin.interface.interface.arcsin": {"tf": 1}, "pangolin.interface.interface.arcsinh": {"tf": 1}, "pangolin.interface.interface.arctan": {"tf": 1}, "pangolin.interface.interface.arctanh": {"tf": 1}, "pangolin.interface.interface.cos": {"tf": 1}, "pangolin.interface.interface.cosh": {"tf": 1}, "pangolin.interface.interface.exp": {"tf": 1}, "pangolin.interface.interface.inv_logit": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.log": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.logit": {"tf": 1}, "pangolin.interface.interface.sin": {"tf": 1}, "pangolin.interface.interface.sinh": {"tf": 1}, "pangolin.interface.interface.step": {"tf": 1}, "pangolin.interface.interface.tan": {"tf": 1}, "pangolin.interface.interface.tanh": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}}, "df": 46, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 13}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.add": {"tf": 1}, "pangolin.interface.sub": {"tf": 1}, "pangolin.interface.mul": {"tf": 1}, "pangolin.interface.div": {"tf": 1}, "pangolin.interface.pow": {"tf": 1}, "pangolin.interface.sqrt": {"tf": 1}, "pangolin.interface.abs": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.create_rv": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1}, "pangolin.interface.interface.abs": {"tf": 1}, "pangolin.interface.vmap.check_tree_consistency": {"tf": 1}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}}, "df": 24}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}}, "df": 10}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 6}}}}}, "n": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.E": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.var": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.std": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.autoregressive": {"tf": 1.4142135623730951}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1.4142135623730951}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1.4142135623730951}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.plate": {"tf": 1.4142135623730951}, "pangolin.ir.VMap.__init__": {"tf": 2}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 2}}, "df": 24, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {"pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 2, "m": {"docs": {"pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 2.449489742783178}, "pangolin.interface.normal": {"tf": 3.4641016151377544}, "pangolin.interface.interface.normal": {"tf": 3.4641016151377544}}, "df": 3}}, "s": {"docs": {"pangolin.ir.Composite.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 7}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}}, "df": 9}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 11}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 8}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.vmap.split_shape": {"tf": 1}}, "df": 2, "s": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1}}, "df": 4}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.index": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.var": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.std": {"tf": 1.4142135623730951}, "pangolin.interface.print_upstream": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1}, "pangolin.inference.numpyro.var": {"tf": 1}, "pangolin.inference.numpyro.std": {"tf": 1}}, "df": 9}, "u": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.index": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample_flat": {"tf": 1.7320508075688772}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.normal": {"tf": 1.7320508075688772}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.arccos": {"tf": 1}, "pangolin.interface.arccosh": {"tf": 1}, "pangolin.interface.arcsin": {"tf": 1}, "pangolin.interface.arcsinh": {"tf": 1}, "pangolin.interface.arctan": {"tf": 1}, "pangolin.interface.arctanh": {"tf": 1}, "pangolin.interface.cos": {"tf": 1}, "pangolin.interface.cosh": {"tf": 1}, "pangolin.interface.exp": {"tf": 1}, "pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.log": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.logit": {"tf": 1}, "pangolin.interface.sin": {"tf": 1}, "pangolin.interface.sinh": {"tf": 1}, "pangolin.interface.step": {"tf": 1}, "pangolin.interface.tan": {"tf": 1}, "pangolin.interface.tanh": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1.7320508075688772}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.arccos": {"tf": 1}, "pangolin.interface.interface.arccosh": {"tf": 1}, "pangolin.interface.interface.arcsin": {"tf": 1}, "pangolin.interface.interface.arcsinh": {"tf": 1}, "pangolin.interface.interface.arctan": {"tf": 1}, "pangolin.interface.interface.arctanh": {"tf": 1}, "pangolin.interface.interface.cos": {"tf": 1}, "pangolin.interface.interface.cosh": {"tf": 1}, "pangolin.interface.interface.exp": {"tf": 1}, "pangolin.interface.interface.inv_logit": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.log": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.logit": {"tf": 1}, "pangolin.interface.interface.sin": {"tf": 1}, "pangolin.interface.interface.sinh": {"tf": 1}, "pangolin.interface.interface.step": {"tf": 1}, "pangolin.interface.interface.tan": {"tf": 1}, "pangolin.interface.interface.tanh": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.convert_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 2}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 99}}}}}}, "r": {"docs": {"pangolin.ir.Composite.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 7}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.index": {"tf": 2}, "pangolin.inference.numpyro.sample_flat": {"tf": 2.449489742783178}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 2}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.convert_args": {"tf": 2.23606797749979}, "pangolin.interface.vmap.generated_nodes": {"tf": 2.8284271247461903}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2.8284271247461903}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.4142135623730951}}, "df": 12}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.create_rv": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Composite.__init__": {"tf": 2}, "pangolin.ir.Autoregressive.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.7320508075688772}}, "df": 10, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1}, "pangolin.inference.numpyro.var": {"tf": 1}, "pangolin.inference.numpyro.std": {"tf": 1}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.arccos": {"tf": 1}, "pangolin.interface.arccosh": {"tf": 1}, "pangolin.interface.arcsin": {"tf": 1}, "pangolin.interface.arcsinh": {"tf": 1}, "pangolin.interface.arctan": {"tf": 1}, "pangolin.interface.arctanh": {"tf": 1}, "pangolin.interface.cos": {"tf": 1}, "pangolin.interface.cosh": {"tf": 1}, "pangolin.interface.exp": {"tf": 1}, "pangolin.interface.inv_logit": {"tf": 1}, "pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.log": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.logit": {"tf": 1}, "pangolin.interface.sin": {"tf": 1}, "pangolin.interface.sinh": {"tf": 1}, "pangolin.interface.step": {"tf": 1}, "pangolin.interface.tan": {"tf": 1}, "pangolin.interface.tanh": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.arccos": {"tf": 1}, "pangolin.interface.interface.arccosh": {"tf": 1}, "pangolin.interface.interface.arcsin": {"tf": 1}, "pangolin.interface.interface.arcsinh": {"tf": 1}, "pangolin.interface.interface.arctan": {"tf": 1}, "pangolin.interface.interface.arctanh": {"tf": 1}, "pangolin.interface.interface.cos": {"tf": 1}, "pangolin.interface.interface.cosh": {"tf": 1}, "pangolin.interface.interface.exp": {"tf": 1}, "pangolin.interface.interface.inv_logit": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.log": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.logit": {"tf": 1}, "pangolin.interface.interface.sin": {"tf": 1}, "pangolin.interface.interface.sinh": {"tf": 1}, "pangolin.interface.interface.step": {"tf": 1}, "pangolin.interface.interface.tan": {"tf": 1}, "pangolin.interface.interface.tanh": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}}, "df": 88}}}}}}}}, "s": {"docs": {"pangolin.ir.Composite.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.inference.numpyro.E": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.var": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.std": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 8}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 8}, "w": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 2.6457513110645907}, "pangolin.interface.normal": {"tf": 2.8284271247461903}, "pangolin.interface.interface.normal": {"tf": 2.8284271247461903}}, "df": 3}}}, "e": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1.4142135623730951}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 8}}}}}, "b": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1}, "pangolin.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}}, "df": 6}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.numpyro.sample_flat": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 2}, "pangolin.interface.interface.normal": {"tf": 2}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "x": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.non_operator_rv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}}, "df": 6}, "m": {"docs": {}, "df": 0, "u": {"docs": {"pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Autoregressive.__init__": {"tf": 1}}, "df": 1}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 21}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 19}}, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1.4142135623730951}, "pangolin.interface.interface.OperatorRV": {"tf": 1.4142135623730951}}, "df": 2}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1.4142135623730951}, "pangolin.ir.Constant": {"tf": 1.4142135623730951}, "pangolin.ir.VMap": {"tf": 1.4142135623730951}, "pangolin.ir.Index": {"tf": 1.4142135623730951}, "pangolin.ir.Composite": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap": {"tf": 1.4142135623730951}}, "df": 17}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.RV": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.RV": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}}, "df": 1}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 2}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 2.23606797749979}, "pangolin.ir.scalar_ops": {"tf": 2}}, "df": 10}, "1": {"0": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.sample": {"tf": 1.7320508075688772}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.matmul": {"tf": 2}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 2}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 2.8284271247461903}, "pangolin.ir.index": {"tf": 3.7416573867739413}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2}}, "df": 16, "d": {"docs": {"pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 1}}, "2": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.matmul": {"tf": 2}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 2}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.ir.index": {"tf": 3.872983346207417}}, "df": 7, "d": {"docs": {"pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 1}}, "3": {"docs": {"pangolin.interface.vmap.plate": {"tf": 3.1622776601683795}, "pangolin.ir.index": {"tf": 3}}, "df": 2}, "4": {"docs": {"pangolin.ir.index": {"tf": 2.449489742783178}}, "df": 1}, "5": {"docs": {"pangolin.interface.interface.sqrt": {"tf": 1}, "pangolin.ir.index": {"tf": 2.23606797749979}}, "df": 2}, "6": {"docs": {"pangolin.ir.index": {"tf": 2.6457513110645907}}, "df": 1}, "7": {"docs": {"pangolin.ir.index": {"tf": 2}}, "df": 1}, "docs": {"pangolin": {"tf": 6.082762530298219}, "pangolin.vmap": {"tf": 7.54983443527075}, "pangolin.index": {"tf": 1.7320508075688772}, "pangolin.inference": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 4.358898943540674}, "pangolin.inference.inference_util.Calculate.sample_flat": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.frozen_options": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 11.269427669584644}, "pangolin.inference.inference_util.Calculate.E": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.var": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.std": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.sample": {"tf": 11.269427669584644}, "pangolin.inference.numpyro.sample_flat": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.E": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.var": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.std": {"tf": 1.7320508075688772}, "pangolin.interface": {"tf": 1.7320508075688772}, "pangolin.interface.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.composite": {"tf": 1.7320508075688772}, "pangolin.interface.autoregressive": {"tf": 1.7320508075688772}, "pangolin.interface.Loop": {"tf": 1.7320508075688772}, "pangolin.interface.Loop.__init__": {"tf": 4}, "pangolin.interface.Loop.loops": {"tf": 1.7320508075688772}, "pangolin.interface.Loop.length": {"tf": 1.7320508075688772}, "pangolin.interface.slot": {"tf": 1.7320508075688772}, "pangolin.interface.print_upstream": {"tf": 1.7320508075688772}, "pangolin.interface.OperatorRV": {"tf": 1.7320508075688772}, "pangolin.interface.OperatorRV.__init__": {"tf": 2.6457513110645907}, "pangolin.interface.OperatorRV.n": {"tf": 1.7320508075688772}, "pangolin.interface.makerv": {"tf": 4}, "pangolin.interface.normal": {"tf": 3.605551275463989}, "pangolin.interface.normal_prec": {"tf": 3.605551275463989}, "pangolin.interface.log_normal": {"tf": 2.23606797749979}, "pangolin.interface.cauchy": {"tf": 2.23606797749979}, "pangolin.interface.bernoulli": {"tf": 3.872983346207417}, "pangolin.interface.bernoulli_logit": {"tf": 4.242640687119285}, "pangolin.interface.binomial": {"tf": 3.4641016151377544}, "pangolin.interface.uniform": {"tf": 3}, "pangolin.interface.beta": {"tf": 2.23606797749979}, "pangolin.interface.beta_binomial": {"tf": 3.7416573867739413}, "pangolin.interface.exponential": {"tf": 2.23606797749979}, "pangolin.interface.gamma": {"tf": 3.7416573867739413}, "pangolin.interface.poisson": {"tf": 2.23606797749979}, "pangolin.interface.student_t": {"tf": 3.1622776601683795}, "pangolin.interface.add": {"tf": 1.7320508075688772}, "pangolin.interface.sub": {"tf": 1.7320508075688772}, "pangolin.interface.mul": {"tf": 1.7320508075688772}, "pangolin.interface.div": {"tf": 1.7320508075688772}, "pangolin.interface.pow": {"tf": 1.7320508075688772}, "pangolin.interface.sqrt": {"tf": 1.7320508075688772}, "pangolin.interface.abs": {"tf": 1.7320508075688772}, "pangolin.interface.arccos": {"tf": 1.7320508075688772}, "pangolin.interface.arccosh": {"tf": 1.7320508075688772}, "pangolin.interface.arcsin": {"tf": 1.7320508075688772}, "pangolin.interface.arcsinh": {"tf": 1.7320508075688772}, "pangolin.interface.arctan": {"tf": 1.7320508075688772}, "pangolin.interface.arctanh": {"tf": 1.7320508075688772}, "pangolin.interface.cos": {"tf": 1.7320508075688772}, "pangolin.interface.cosh": {"tf": 1.7320508075688772}, "pangolin.interface.exp": {"tf": 1.7320508075688772}, "pangolin.interface.inv_logit": {"tf": 1.7320508075688772}, "pangolin.interface.expit": {"tf": 2}, "pangolin.interface.sigmoid": {"tf": 2}, "pangolin.interface.log": {"tf": 1.7320508075688772}, "pangolin.interface.log_gamma": {"tf": 3.872983346207417}, "pangolin.interface.logit": {"tf": 1.7320508075688772}, "pangolin.interface.sin": {"tf": 1.7320508075688772}, "pangolin.interface.sinh": {"tf": 1.7320508075688772}, "pangolin.interface.step": {"tf": 1.7320508075688772}, "pangolin.interface.tan": {"tf": 1.7320508075688772}, "pangolin.interface.tanh": {"tf": 1.7320508075688772}, "pangolin.interface.multi_normal": {"tf": 2.23606797749979}, "pangolin.interface.categorical": {"tf": 2.6457513110645907}, "pangolin.interface.multinomial": {"tf": 3.4641016151377544}, "pangolin.interface.dirichlet": {"tf": 3.1622776601683795}, "pangolin.interface.matmul": {"tf": 6.244997998398398}, "pangolin.interface.inv": {"tf": 1.7320508075688772}, "pangolin.interface.softmax": {"tf": 4.123105625617661}, "pangolin.interface.sum": {"tf": 4.242640687119285}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1.7320508075688772}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1.7320508075688772}, "pangolin.interface.autoregressive.repeat": {"tf": 2.8284271247461903}, "pangolin.interface.composite.make_composite": {"tf": 4.358898943540674}, "pangolin.interface.composite.composite_flat": {"tf": 1.7320508075688772}, "pangolin.interface.composite.composite": {"tf": 1.7320508075688772}, "pangolin.interface.interface": {"tf": 1.4142135623730951}, "pangolin.interface.interface.RV_or_array": {"tf": 1.7320508075688772}, "pangolin.interface.interface.for_api": {"tf": 1.7320508075688772}, "pangolin.interface.interface.api": {"tf": 1.4142135623730951}, "pangolin.interface.interface.OperatorRV": {"tf": 1.7320508075688772}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 2.6457513110645907}, "pangolin.interface.interface.OperatorRV.n": {"tf": 1.7320508075688772}, "pangolin.interface.interface.rv_factory": {"tf": 2.6457513110645907}, "pangolin.interface.interface.rv_factories": {"tf": 1.7320508075688772}, "pangolin.interface.interface.SetRVFactory": {"tf": 1.7320508075688772}, "pangolin.interface.interface.SetRVFactory.__init__": {"tf": 1.7320508075688772}, "pangolin.interface.interface.SetRVFactory.rv_factory": {"tf": 1.7320508075688772}, "pangolin.interface.interface.non_operator_rv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.makerv": {"tf": 4}, "pangolin.interface.interface.standard_makerv": {"tf": 3.4641016151377544}, "pangolin.interface.interface.makerv_funs": {"tf": 1.7320508075688772}, "pangolin.interface.interface.create_rv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.normal": {"tf": 3.605551275463989}, "pangolin.interface.interface.normal_prec": {"tf": 3.605551275463989}, "pangolin.interface.interface.log_normal": {"tf": 2.23606797749979}, "pangolin.interface.interface.cauchy": {"tf": 2.23606797749979}, "pangolin.interface.interface.bernoulli": {"tf": 3.872983346207417}, "pangolin.interface.interface.bernoulli_logit": {"tf": 4.242640687119285}, "pangolin.interface.interface.binomial": {"tf": 3.4641016151377544}, "pangolin.interface.interface.uniform": {"tf": 3}, "pangolin.interface.interface.beta": {"tf": 2.23606797749979}, "pangolin.interface.interface.beta_binomial": {"tf": 3.7416573867739413}, "pangolin.interface.interface.exponential": {"tf": 2.23606797749979}, "pangolin.interface.interface.gamma": {"tf": 3.7416573867739413}, "pangolin.interface.interface.poisson": {"tf": 2.23606797749979}, "pangolin.interface.interface.student_t": {"tf": 3.1622776601683795}, "pangolin.interface.interface.implicit_vectorized_scalar_fun": {"tf": 1.7320508075688772}, "pangolin.interface.interface.add": {"tf": 2.8284271247461903}, "pangolin.interface.interface.sub": {"tf": 2.8284271247461903}, "pangolin.interface.interface.mul": {"tf": 2.8284271247461903}, "pangolin.interface.interface.div": {"tf": 2.8284271247461903}, "pangolin.interface.interface.pow": {"tf": 2.8284271247461903}, "pangolin.interface.interface.sqrt": {"tf": 1.7320508075688772}, "pangolin.interface.interface.abs": {"tf": 1.7320508075688772}, "pangolin.interface.interface.arccos": {"tf": 1.7320508075688772}, "pangolin.interface.interface.arccosh": {"tf": 1.7320508075688772}, "pangolin.interface.interface.arcsin": {"tf": 1.7320508075688772}, "pangolin.interface.interface.arcsinh": {"tf": 1.7320508075688772}, "pangolin.interface.interface.arctan": {"tf": 1.7320508075688772}, "pangolin.interface.interface.arctanh": {"tf": 1.7320508075688772}, "pangolin.interface.interface.cos": {"tf": 1.7320508075688772}, "pangolin.interface.interface.cosh": {"tf": 1.7320508075688772}, "pangolin.interface.interface.exp": {"tf": 1.7320508075688772}, "pangolin.interface.interface.inv_logit": {"tf": 1.7320508075688772}, "pangolin.interface.interface.expit": {"tf": 2}, "pangolin.interface.interface.sigmoid": {"tf": 2}, "pangolin.interface.interface.log": {"tf": 1.7320508075688772}, "pangolin.interface.interface.log_gamma": {"tf": 3.872983346207417}, "pangolin.interface.interface.logit": {"tf": 1.7320508075688772}, "pangolin.interface.interface.sin": {"tf": 1.7320508075688772}, "pangolin.interface.interface.sinh": {"tf": 1.7320508075688772}, "pangolin.interface.interface.step": {"tf": 1.7320508075688772}, "pangolin.interface.interface.tan": {"tf": 1.7320508075688772}, "pangolin.interface.interface.tanh": {"tf": 1.7320508075688772}, "pangolin.interface.interface.multi_normal": {"tf": 2.23606797749979}, "pangolin.interface.interface.categorical": {"tf": 2.6457513110645907}, "pangolin.interface.interface.multinomial": {"tf": 3.4641016151377544}, "pangolin.interface.interface.dirichlet": {"tf": 3.1622776601683795}, "pangolin.interface.interface.matmul": {"tf": 6.244997998398398}, "pangolin.interface.interface.inv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.softmax": {"tf": 4.123105625617661}, "pangolin.interface.interface.sum": {"tf": 4.242640687119285}, "pangolin.interface.vmap.FlatCallable": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.check_tree_consistency": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.get_flat_vmap_args_and_axes": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap": {"tf": 7.54983443527075}, "pangolin.interface.vmap.convert_args": {"tf": 5.5677643628300215}, "pangolin.interface.vmap.generated_nodes": {"tf": 6.855654600401044}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 7}, "pangolin.interface.vmap.AbstractOp": {"tf": 2.23606797749979}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 4.358898943540674}, "pangolin.interface.vmap.AbstractOp.shape": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 3.872983346207417}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 6.855654600401044}, "pangolin.interface.vmap.vmap_eval": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.plate": {"tf": 22.40535650240808}, "pangolin.ir": {"tf": 5.916079783099616}, "pangolin.ir.Op": {"tf": 6.557438524302}, "pangolin.ir.Op.__init__": {"tf": 4.898979485566356}, "pangolin.ir.Op.name": {"tf": 1.4142135623730951}, "pangolin.ir.Op.random": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 4.123105625617661}, "pangolin.ir.RV": {"tf": 1.7320508075688772}, "pangolin.ir.RV.__init__": {"tf": 2.6457513110645907}, "pangolin.ir.RV.op": {"tf": 1.7320508075688772}, "pangolin.ir.RV.shape": {"tf": 1.7320508075688772}, "pangolin.ir.RV.ndim": {"tf": 2.23606797749979}, "pangolin.ir.Constant": {"tf": 2.23606797749979}, "pangolin.ir.Constant.__init__": {"tf": 3.7416573867739413}, "pangolin.ir.Constant.value": {"tf": 1.4142135623730951}, "pangolin.ir.VMap": {"tf": 2.6457513110645907}, "pangolin.ir.VMap.__init__": {"tf": 7.416198487095663}, "pangolin.ir.VMap.base_op": {"tf": 1.7320508075688772}, "pangolin.ir.VMap.in_axes": {"tf": 1.7320508075688772}, "pangolin.ir.VMap.axis_size": {"tf": 1.7320508075688772}, "pangolin.ir.Add": {"tf": 1.7320508075688772}, "pangolin.ir.Index": {"tf": 3}, "pangolin.ir.Index.__init__": {"tf": 3.7416573867739413}, "pangolin.ir.Index.slices": {"tf": 1.7320508075688772}, "pangolin.ir.Index.advanced_at_start": {"tf": 3}, "pangolin.ir.Composite": {"tf": 1.4142135623730951}, "pangolin.ir.Composite.__init__": {"tf": 4.898979485566356}, "pangolin.ir.Composite.num_inputs": {"tf": 1.7320508075688772}, "pangolin.ir.Composite.ops": {"tf": 1.7320508075688772}, "pangolin.ir.Composite.par_nums": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive": {"tf": 6.557438524302}, "pangolin.ir.Autoregressive.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.base_op": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.length": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.in_axes": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.where_self": {"tf": 1.7320508075688772}, "pangolin.ir.constant": {"tf": 1.7320508075688772}, "pangolin.ir.constant.Constant": {"tf": 2.23606797749979}, "pangolin.ir.constant.Constant.__init__": {"tf": 3.7416573867739413}, "pangolin.ir.constant.Constant.value": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 25.632011235952593}, "pangolin.ir.index.Index": {"tf": 3}, "pangolin.ir.index.Index.__init__": {"tf": 3.7416573867739413}, "pangolin.ir.index.Index.slices": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 3}, "pangolin.ir.multivariate_dists": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 4.898979485566356}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 2.6457513110645907}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_funs": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 2.23606797749979}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 4.898979485566356}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 4.898979485566356}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 4.898979485566356}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 3.7416573867739413}, "pangolin.ir.multivariate_funs.Sum.axis": {"tf": 1.7320508075688772}, "pangolin.ir.op": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op": {"tf": 6.557438524302}, "pangolin.ir.op.Op.__init__": {"tf": 4.898979485566356}, "pangolin.ir.op.Op.name": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.random": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.get_shape": {"tf": 4.123105625617661}, "pangolin.ir.rv": {"tf": 1.7320508075688772}, "pangolin.ir.rv.RV": {"tf": 1.7320508075688772}, "pangolin.ir.rv.RV.__init__": {"tf": 2.6457513110645907}, "pangolin.ir.rv.RV.op": {"tf": 1.7320508075688772}, "pangolin.ir.rv.RV.shape": {"tf": 1.7320508075688772}, "pangolin.ir.rv.RV.ndim": {"tf": 2.23606797749979}, "pangolin.ir.scalar_ops": {"tf": 15.066519173319364}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 6.082762530298219}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 2.449489742783178}, "pangolin.ir.scalar_ops.Normal": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.NormalPrec": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.LogNormal": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Bernoulli": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.BernoulliLogit": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Binomial": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Uniform": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Beta": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Exponential": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Gamma": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Poisson": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.BetaBinomial": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.StudentT": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Add": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Sub": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Mul": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Div": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Pow": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Abs": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Arccos": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Arccosh": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Arcsin": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Arcsinh": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Arctan": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Arctanh": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Cos": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Cosh": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Exp": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.InvLogit": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Log": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Logit": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Sin": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Sinh": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Step": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Tan": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Tanh": {"tf": 1.7320508075688772}, "pangolin.ir.vmap": {"tf": 1.7320508075688772}, "pangolin.ir.vmap.VMap": {"tf": 2.6457513110645907}, "pangolin.ir.vmap.VMap.__init__": {"tf": 7.416198487095663}, "pangolin.ir.vmap.VMap.base_op": {"tf": 1.7320508075688772}, "pangolin.ir.vmap.VMap.in_axes": {"tf": 1.7320508075688772}, "pangolin.ir.vmap.VMap.axis_size": {"tf": 1.7320508075688772}, "pangolin.ir.vmap.split_shape": {"tf": 1.7320508075688772}, "pangolin.ir.vmap.get_sliced_shapes": {"tf": 1.7320508075688772}}, "df": 295, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}}, "df": 7, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}}, "df": 2}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "p": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "s": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.Loop": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.interface.Loop.loops": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.mul": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 2}}, "df": 4, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.multivariate_funs": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 5}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.matmul": {"tf": 1.7320508075688772}, "pangolin.interface.interface.matmul": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {"pangolin.interface.interface.mul": {"tf": 1}}, "df": 1}, "e": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 26}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1.4142135623730951}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.vmap.vmap_eval": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {"pangolin.interface.vmap.plate": {"tf": 2.8284271247461903}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 4.47213595499958}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 4, "n": {"docs": {"pangolin.vmap": {"tf": 2}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 2}, "pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.api": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 2}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 1.4142135623730951}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 31, "t": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 8}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1}}, "df": 2}, "o": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 5}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}}, "df": 11, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 2.23606797749979}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 12}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 2.449489742783178}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.4142135623730951}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.ir.Index": {"tf": 1.4142135623730951}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 2.8284271247461903}, "pangolin.ir.index.Index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.index": {"tf": 2.8284271247461903}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.Loop.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "v": {"docs": {"pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.api": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 6, "s": {"docs": {"pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {"pangolin": {"tf": 1.4142135623730951}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 14, "s": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.matmul": {"tf": 2}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.matmul": {"tf": 2}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.Op": {"tf": 1.7320508075688772}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 2.23606797749979}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 21}, "s": {"docs": {"pangolin": {"tf": 1.4142135623730951}, "pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.matmul": {"tf": 2}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 2}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 2}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 3.3166247903554}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 62}, "r": {"docs": {"pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2.449489742783178}}, "df": 5}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {"pangolin.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.interface.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 8, "o": {"docs": {"pangolin": {"tf": 2.23606797749979}, "pangolin.vmap": {"tf": 2.449489742783178}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 2.23606797749979}, "pangolin.inference.numpyro.sample": {"tf": 2.23606797749979}, "pangolin.interface.vmap": {"tf": 2.449489742783178}, "pangolin.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1.4142135623730951}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.api": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 2.449489742783178}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.plate": {"tf": 2}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 3.4641016151377544}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2.23606797749979}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 60, "d": {"docs": {}, "df": 0, "o": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 6}}, "p": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 2.8284271247461903}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 2.8284271247461903}, "pangolin.interface.Loop.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.normal_prec": {"tf": 1.4142135623730951}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1.7320508075688772}, "pangolin.interface.gamma": {"tf": 1.4142135623730951}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 2}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.standard_makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal_prec": {"tf": 1.4142135623730951}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1.7320508075688772}, "pangolin.interface.interface.gamma": {"tf": 1.4142135623730951}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 2.8284271247461903}, "pangolin.interface.vmap.generated_nodes": {"tf": 2.449489742783178}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2.449489742783178}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap_eval": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 1.4142135623730951}, "pangolin.ir.Op": {"tf": 1.7320508075688772}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.name": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 2.8284271247461903}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1.4142135623730951}, "pangolin.ir.RV.ndim": {"tf": 1.7320508075688772}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 2.23606797749979}, "pangolin.ir.Index": {"tf": 1.4142135623730951}, "pangolin.ir.Index.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Index.advanced_at_start": {"tf": 2.6457513110645907}, "pangolin.ir.Composite": {"tf": 1.7320508075688772}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}, "pangolin.ir.index": {"tf": 4.795831523312719}, "pangolin.ir.index.Index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 2.6457513110645907}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.get_shape": {"tf": 2.8284271247461903}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.ndim": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 2.23606797749979}, "pangolin.ir.vmap.VMap.__init__": {"tf": 2.23606797749979}}, "df": 83, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 2.23606797749979}, "pangolin.ir.scalar_ops": {"tf": 1.7320508075688772}}, "df": 5}}, "n": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.matmul": {"tf": 2}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.matmul": {"tf": 2}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 2.449489742783178}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 14}, "t": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 4}}, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.matmul": {"tf": 2}, "pangolin.interface.interface": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.matmul": {"tf": 2}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 2.6457513110645907}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 35}, "n": {"docs": {}, "df": 0, "k": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.makerv": {"tf": 2}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}, "pangolin.interface.interface": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 2}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 2}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 1.7320508075688772}, "pangolin.ir.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 2.8284271247461903}, "pangolin.ir.index.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.get_shape": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 37}, "n": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"pangolin": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 10}}, "y": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}}, "df": 13, "s": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 14}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 2}}, "df": 6, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 7}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1}}, "df": 7, "[": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 3, "|": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}}, "df": 4}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Autoregressive.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"pangolin.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin": {"tf": 1}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2.449489742783178}}, "df": 4}}}}}}, "r": {"docs": {"pangolin.ir.Composite": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}}, "df": 4, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 40, "\u2014": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.gamma": {"tf": 1.4142135623730951}, "pangolin.interface.interface.gamma": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}}, "df": 5}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}}, "df": 6, "s": {"docs": {"pangolin.interface.OperatorRV.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 2}, "pangolin.ir.RV.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 2}, "pangolin.ir.rv.RV.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1.4142135623730951}}, "df": 10}}}}, "t": {"docs": {"pangolin.ir.Index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.pow": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap": {"tf": 1.7320508075688772}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pangolin": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}}, "df": 3}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.interface.matmul": {"tf": 1.4142135623730951}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 6, "s": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}, "d": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}}, "v": {"docs": {"pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 8}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 2.6457513110645907}, "pangolin.inference.numpyro.sample": {"tf": 2.6457513110645907}, "pangolin.interface.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap": {"tf": 1.7320508075688772}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.plate": {"tf": 2}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {"pangolin.interface.matmul": {"tf": 2.23606797749979}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1.4142135623730951}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 2.23606797749979}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 9, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pangolin": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Index": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"pangolin.vmap": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.Loop.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.7320508075688772}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Index": {"tf": 1.4142135623730951}, "pangolin.ir.Index.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 2.8284271247461903}, "pangolin.ir.index.Index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 33, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.ir": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {"pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1.4142135623730951}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 3}}}}}}, "y": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 15}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.interface.matmul": {"tf": 1.7320508075688772}, "pangolin.interface.interface.matmul": {"tf": 1.7320508075688772}}, "df": 2}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 9}}}}, "s": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.sample": {"tf": 1.7320508075688772}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 2}, "pangolin.ir.Op": {"tf": 1.7320508075688772}, "pangolin.ir.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.7320508075688772}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.op.Op": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 23, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.log_gamma": {"tf": 1.4142135623730951}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1.4142135623730951}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 3}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.plate": {"tf": 2}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 9}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 4}, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1.4142135623730951}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}}, "df": 2, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 7}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}}, "df": 7}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 2}, "pangolin.inference.numpyro.sample": {"tf": 2}}, "df": 2}}}}}, "y": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}}, "o": {"docs": {"pangolin.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 1.4142135623730951}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 22, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.softmax": {"tf": 1.4142135623730951}, "pangolin.interface.interface.softmax": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Softmax": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 5}}, "s": {"docs": {"pangolin.interface.interface": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {"pangolin.interface.interface.sub": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.sub": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"pangolin.ir.index": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}, "m": {"docs": {"pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}}, "df": 4}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 10}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.plate": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 1.7320508075688772}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.index": {"tf": 2.23606797749979}, "pangolin.ir.op.Op.get_shape": {"tf": 1.7320508075688772}, "pangolin.ir.rv.RV.shape": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}}, "df": 9, "s": {"docs": {"pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 2.23606797749979}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 2.23606797749979}}, "df": 5}, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.normal": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.ir": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.interface.interface.student_t": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {"pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 8}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.value": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1.4142135623730951}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 2}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2.23606797749979}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 9, "s": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.log_gamma": {"tf": 1.4142135623730951}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1.4142135623730951}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1.4142135623730951}}, "df": 5}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2, "s": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.sqrt": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 5, "d": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1.4142135623730951}, "pangolin.ir.Index": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index": {"tf": 1.4142135623730951}}, "df": 4}, "s": {"docs": {"pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 2.23606797749979}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 2.23606797749979}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 2.23606797749979}, "pangolin.inference.numpyro.sample": {"tf": 2.23606797749979}, "pangolin.interface.vmap": {"tf": 2.23606797749979}, "pangolin.interface.Loop": {"tf": 1.4142135623730951}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.OperatorRV": {"tf": 1.7320508075688772}, "pangolin.interface.makerv": {"tf": 2.449489742783178}, "pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1.7320508075688772}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1.4142135623730951}, "pangolin.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.dirichlet": {"tf": 1.4142135623730951}, "pangolin.interface.matmul": {"tf": 2.23606797749979}, "pangolin.interface.inv": {"tf": 1.4142135623730951}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 2.23606797749979}, "pangolin.interface.composite.make_composite": {"tf": 2.23606797749979}, "pangolin.interface.interface": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1.7320508075688772}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 2.449489742783178}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1.7320508075688772}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1.4142135623730951}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1.4142135623730951}, "pangolin.interface.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.dirichlet": {"tf": 1.4142135623730951}, "pangolin.interface.interface.matmul": {"tf": 2.23606797749979}, "pangolin.interface.interface.inv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 2.23606797749979}, "pangolin.interface.vmap.vmap": {"tf": 2.23606797749979}, "pangolin.interface.vmap.convert_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_eval": {"tf": 2}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Op.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.RV": {"tf": 1.7320508075688772}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1.4142135623730951}, "pangolin.ir.Constant.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 2}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 2.23606797749979}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.index": {"tf": 3.872983346207417}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 2.23606797749979}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV": {"tf": 1.7320508075688772}, "pangolin.ir.rv.RV.shape": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 2}}, "df": 113, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.convert_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.Op": {"tf": 1.7320508075688772}, "pangolin.ir.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.7320508075688772}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 2.6457513110645907}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 29, "n": {"docs": {"pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"pangolin.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 17}}}}}}, "s": {"docs": {"pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.value": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}}, "df": 11, "s": {"docs": {"pangolin.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pangolin": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pangolin": {"tf": 1}}, "df": 1}, "g": {"docs": {"pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 8}}, "l": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes": {"tf": 2}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.index": {"tf": 2.449489742783178}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 22, "o": {"docs": {}, "df": 0, "w": {"docs": {"pangolin.ir.index": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.bernoulli_logit": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1.4142135623730951}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1.4142135623730951}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.sqrt": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1.4142135623730951}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir": {"tf": 1.4142135623730951}, "pangolin.ir.Op": {"tf": 2.23606797749979}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 2.23606797749979}, "pangolin.ir.constant.Constant.value": {"tf": 1}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 2.23606797749979}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 43, "d": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.matmul": {"tf": 2.23606797749979}, "pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 2.23606797749979}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 2.23606797749979}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 51}, "y": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 3}}}, "i": {"docs": {"pangolin.interface.interface.api": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1.7320508075688772}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}}, "df": 27, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.multivariate_funs": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.vmap": {"tf": 2.23606797749979}, "pangolin.interface.vmap": {"tf": 2.23606797749979}, "pangolin.interface.vmap.vmap": {"tf": 2.23606797749979}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.plate": {"tf": 1.4142135623730951}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 8}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.plate": {"tf": 1.4142135623730951}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 12, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.Loop.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.Loop.loops": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1.4142135623730951}}, "df": 3}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1.7320508075688772}, "pangolin.ir.index": {"tf": 2.23606797749979}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "+": {"docs": {}, "df": 0, "b": {"docs": {"pangolin.interface.interface.add": {"tf": 1}}, "df": 1}}, "*": {"docs": {}, "df": 0, "b": {"docs": {"pangolin.interface.interface.mul": {"tf": 1}}, "df": 1}, "*": {"docs": {}, "df": 0, "b": {"docs": {"pangolin.interface.interface.pow": {"tf": 1}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "b": {"docs": {"pangolin.interface.interface.div": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.4142135623730951}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.vmap.vmap_eval": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {"pangolin.vmap": {"tf": 2.23606797749979}, "pangolin.interface.vmap": {"tf": 2.23606797749979}, "pangolin.interface.vmap.vmap": {"tf": 2.23606797749979}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Composite": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sqrt": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.Op": {"tf": 1.7320508075688772}, "pangolin.ir.Op.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Op.random": {"tf": 1.4142135623730951}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive": {"tf": 1.7320508075688772}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.random": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 2}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1.7320508075688772}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 37}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1.4142135623730951}, "pangolin.interface.composite.make_composite": {"tf": 2}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}, "pangolin.interface.interface.api": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 2.449489742783178}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2.449489742783178}, "pangolin.interface.vmap.vmap_eval": {"tf": 2}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 37, "s": {"docs": {"pangolin": {"tf": 1.7320508075688772}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.multivariate_funs": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}}, "df": 8}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}}, "df": 10}}}}}}}}}}, "s": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.index": {"tf": 1.4142135623730951}}, "df": 1, "z": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 5}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 1}}, "e": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 5}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1.7320508075688772}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin": {"tf": 1}, "pangolin.ir": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 5}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}}, "df": 15, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}, "s": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 21, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1.4142135623730951}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}}, "df": 5}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir": {"tf": 1.4142135623730951}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 2.449489742783178}}, "df": 13, "s": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.Loop.loops": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {"pangolin.ir.Autoregressive.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 15}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.op": {"tf": 1}}, "df": 7}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"pangolin.ir": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 3}}, "v": {"docs": {"pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Composite": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin": {"tf": 1}, "pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 64, "d": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 5}, "s": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.standard_makerv": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "\u2014": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 3}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 2}, "pangolin.inference.numpyro.sample": {"tf": 2}, "pangolin.interface.vmap": {"tf": 3}, "pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.OperatorRV": {"tf": 1.4142135623730951}, "pangolin.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1.7320508075688772}, "pangolin.interface.interface": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1.4142135623730951}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 3}, "pangolin.interface.vmap.convert_args": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes": {"tf": 2.23606797749979}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2.449489742783178}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 2.23606797749979}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 2.449489742783178}, "pangolin.ir.RV": {"tf": 1.4142135623730951}, "pangolin.ir.RV.shape": {"tf": 1.4142135623730951}, "pangolin.ir.RV.ndim": {"tf": 1.7320508075688772}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 2}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 3}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 2.449489742783178}, "pangolin.ir.rv.RV": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.shape": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.ndim": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 2}}, "df": 77}, "r": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 31, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2, "s": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 9, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 4, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 2}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 10}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.interface": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 4}}}}}}}}}, "p": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.composite.make_composite": {"tf": 1.7320508075688772}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 2}, "pangolin.ir.Op": {"tf": 2.449489742783178}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1.7320508075688772}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1.4142135623730951}, "pangolin.ir.VMap.__init__": {"tf": 2.6457513110645907}, "pangolin.ir.Index": {"tf": 1.7320508075688772}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 2.449489742783178}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.index.Index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 2.449489742783178}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.name": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1.7320508075688772}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 2.23606797749979}, "pangolin.ir.vmap.VMap": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 2.6457513110645907}}, "df": 40, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 8, "\u2014": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.Loop.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}}, "df": 8, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.rv_factory": {"tf": 1.4142135623730951}, "pangolin.interface.interface.makerv": {"tf": 1.7320508075688772}, "pangolin.interface.interface.standard_makerv": {"tf": 1.4142135623730951}}, "df": 4}}, "s": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}, "\u2014": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}}}}}}, "s": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2.23606797749979}}, "df": 4}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.inference.inference_util.Calculate.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 13, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1.4142135623730951}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 19, "s": {"docs": {"pangolin.interface.vmap.plate": {"tf": 2}, "pangolin.ir.index": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 14}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}, "k": {"docs": {"pangolin.ir.index": {"tf": 1.7320508075688772}}, "df": 1}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pangolin": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.index": {"tf": 2.449489742783178}, "pangolin.ir.index.Index.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 21}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.Loop": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_funs.Sum.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 12}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 14}}, "n": {"docs": {"pangolin.ir.Index": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}, "pangolin.ir.index": {"tf": 2.23606797749979}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.index": {"tf": 2.449489742783178}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.multivariate_dists.Categorical": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 6}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {"pangolin": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 9, "s": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 5}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"pangolin": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 8}}, "q": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 1.7320508075688772}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 9}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1.4142135623730951}}, "df": 19}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}}, "df": 5}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.vmap_eval": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.plate": {"tf": 2}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin": {"tf": 1.4142135623730951}, "pangolin.vmap": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 2}, "pangolin.inference.numpyro.sample": {"tf": 2}, "pangolin.interface.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.OperatorRV.__init__": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.convert_args": {"tf": 2.23606797749979}, "pangolin.interface.vmap.generated_nodes": {"tf": 2.23606797749979}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 2.23606797749979}, "pangolin.interface.vmap.vmap_eval": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 1.7320508075688772}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.RV.__init__": {"tf": 1}, "pangolin.ir.RV.op": {"tf": 1}, "pangolin.ir.RV.shape": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 3.3166247903554}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.rv.RV.__init__": {"tf": 1}, "pangolin.ir.rv.RV.op": {"tf": 1}, "pangolin.ir.rv.RV.shape": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2}}, "df": 40, "s": {"docs": {"pangolin": {"tf": 1.4142135623730951}, "pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 12}}, "e": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 7, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 14}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.Loop": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}}, "df": 2, "s": {"docs": {"pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Autoregressive.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.matmul": {"tf": 2}, "pangolin.interface.interface.matmul": {"tf": 2}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 13}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.composite.make_composite": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.AbstractOp.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Op.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.op.Op.__init__": {"tf": 1.7320508075688772}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 52}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 2}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.interface.interface.pow": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 2.23606797749979}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1.7320508075688772}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1.4142135623730951}, "pangolin.ir.rv.RV.ndim": {"tf": 1}}, "df": 12}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.Loop.loops": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.expit": {"tf": 1}, "pangolin.interface.sigmoid": {"tf": 1}, "pangolin.interface.interface.expit": {"tf": 1}, "pangolin.interface.interface.sigmoid": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.scalar_ops.Cauchy": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.Loop.loops": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 13, "[": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.7320508075688772}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 2.449489742783178}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.vmap.plate": {"tf": 2.449489742783178}}, "df": 1}}}}, "x": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"pangolin.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "w": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.Loop.__init__": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1.4142135623730951}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1.7320508075688772}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 15}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.autoregressive": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive_flat": {"tf": 1}, "pangolin.interface.autoregressive.autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 13, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin": {"tf": 1.4142135623730951}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1.4142135623730951}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.plate": {"tf": 3.4641016151377544}, "pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 2.8284271247461903}}, "df": 21}}}}, "t": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.composite.make_composite": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 21, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 12, "s": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.vmap.plate": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 9, "e": {"docs": {"pangolin.vmap": {"tf": 1.7320508075688772}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.Loop.__init__": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap": {"tf": 1.7320508075688772}, "pangolin.ir.VMap.__init__": {"tf": 2.23606797749979}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 2.23606797749979}}, "df": 11}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 1, "s": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1.7320508075688772}}, "df": 3}}}}, "u": {"docs": {"pangolin.interface.student_t": {"tf": 1.4142135623730951}, "pangolin.interface.interface.student_t": {"tf": 1.4142135623730951}}, "df": 2, "m": {"docs": {"pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 25, "s": {"docs": {"pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1.7320508075688772}, "pangolin.ir.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant": {"tf": 1.7320508075688772}, "pangolin.ir.constant.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.value": {"tf": 1}, "pangolin.ir.index": {"tf": 2}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}}, "df": 14, "r": {"docs": {}, "df": 0, "o": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.beta_binomial": {"tf": 1.4142135623730951}}, "df": 2}}}}, "s": {"docs": {"pangolin.ir.Composite": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"pangolin.interface.vmap.plate": {"tf": 2.8284271247461903}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Op.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.Op.name": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op.name": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1.4142135623730951}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pangolin": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.sample": {"tf": 1.7320508075688772}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 15}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.interface.interface.api": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.vmap.convert_args": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1.4142135623730951}}, "df": 7}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}, "d": {"1": {"docs": {"pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}}, "df": 3}, "2": {"docs": {"pangolin.ir.Op": {"tf": 1.4142135623730951}, "pangolin.ir.Autoregressive": {"tf": 1.4142135623730951}, "pangolin.ir.op.Op": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {"pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.matmul": {"tf": 2.8284271247461903}, "pangolin.interface.inv": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 2.8284271247461903}, "pangolin.interface.interface.inv": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.ir.Autoregressive.__init__": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.__init__": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1.4142135623730951}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.MultiNormal": {"tf": 1}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 23, "s": {"docs": {"pangolin": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}}, "df": 36}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pangolin": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1.4142135623730951}, "pangolin.interface.interface.dirichlet": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Dirichlet": {"tf": 1}, "pangolin.ir.multivariate_dists.Dirichlet.__init__": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 7, "s": {"docs": {"pangolin.ir.RV.ndim": {"tf": 1}, "pangolin.ir.Index": {"tf": 1.4142135623730951}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index": {"tf": 1.4142135623730951}, "pangolin.ir.index.Index.__init__": {"tf": 1}, "pangolin.ir.rv.RV.ndim": {"tf": 1}}, "df": 7}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.ir": {"tf": 1.4142135623730951}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 9}}}}}}}, "v": {"docs": {"pangolin.interface.interface.div": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.interface.div": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.scalar_ops": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pangolin": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Op.random": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.op.Op.random": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 16}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 4, "s": {"docs": {"pangolin.interface.interface": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 2}, "d": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.Autoregressive.__init__": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 5}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.interface.api": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.Op": {"tf": 1}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"pangolin.interface.log_gamma": {"tf": 1}, "pangolin.interface.interface.log_gamma": {"tf": 1}, "pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.index": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops": {"tf": 1.4142135623730951}, "pangolin.ir.scalar_ops.Loggamma": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}}, "df": 3}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 8, "n": {"docs": {"pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial.__init__": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pangolin.interface.vmap.generated_nodes": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.vmap.vmap_subgraph": {"tf": 2.6457513110645907}}, "df": 1, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Constant.value": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.constant.Constant.value": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pangolin": {"tf": 1}, "pangolin.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap": {"tf": 1.7320508075688772}, "pangolin.interface.vmap.vmap_eval": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.vmap_flat": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 2}, "pangolin.ir.Op": {"tf": 1}, "pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 2.23606797749979}, "pangolin.ir.Autoregressive": {"tf": 1}, "pangolin.ir.op.Op": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 2.23606797749979}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.Constant.__init__": {"tf": 1.4142135623730951}, "pangolin.ir.constant.Constant.__init__": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.Index.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.__init__": {"tf": 1}}, "df": 8}, "d": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2}}, "r": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}}, "df": 2, "s": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 2.23606797749979}, "pangolin.inference.numpyro.sample": {"tf": 2.23606797749979}, "pangolin.interface.vmap.generated_nodes": {"tf": 1.4142135623730951}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1.4142135623730951}}, "df": 4}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.normal": {"tf": 1}, "pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.log_normal": {"tf": 1}, "pangolin.interface.cauchy": {"tf": 1}, "pangolin.interface.bernoulli": {"tf": 1}, "pangolin.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.binomial": {"tf": 1}, "pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.beta": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.exponential": {"tf": 1}, "pangolin.interface.gamma": {"tf": 1}, "pangolin.interface.poisson": {"tf": 1}, "pangolin.interface.student_t": {"tf": 1}, "pangolin.interface.multi_normal": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.sum": {"tf": 1.4142135623730951}, "pangolin.interface.interface.normal": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.log_normal": {"tf": 1}, "pangolin.interface.interface.cauchy": {"tf": 1}, "pangolin.interface.interface.bernoulli": {"tf": 1}, "pangolin.interface.interface.bernoulli_logit": {"tf": 1}, "pangolin.interface.interface.binomial": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}, "pangolin.interface.interface.beta": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1.4142135623730951}, "pangolin.interface.interface.exponential": {"tf": 1}, "pangolin.interface.interface.gamma": {"tf": 1}, "pangolin.interface.interface.poisson": {"tf": 1}, "pangolin.interface.interface.student_t": {"tf": 1}, "pangolin.interface.interface.multi_normal": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.sum": {"tf": 1.4142135623730951}}, "df": 36, "s": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.interface.interface.add": {"tf": 1}, "pangolin.interface.interface.sub": {"tf": 1}, "pangolin.interface.interface.mul": {"tf": 1}, "pangolin.interface.interface.div": {"tf": 1}, "pangolin.ir.Index": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index": {"tf": 1}}, "df": 10}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.normal_prec": {"tf": 1}, "pangolin.interface.interface.normal_prec": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.multivariate_funs": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.categorical": {"tf": 1}, "pangolin.interface.multinomial": {"tf": 1}, "pangolin.interface.dirichlet": {"tf": 1}, "pangolin.interface.softmax": {"tf": 1}, "pangolin.interface.interface.categorical": {"tf": 1}, "pangolin.interface.interface.multinomial": {"tf": 1}, "pangolin.interface.interface.dirichlet": {"tf": 1}, "pangolin.interface.interface.softmax": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp": {"tf": 1.4142135623730951}, "pangolin.ir.multivariate_dists.Categorical": {"tf": 1}, "pangolin.ir.multivariate_dists.Multinomial": {"tf": 1}}, "df": 11, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.interface.matmul": {"tf": 1}, "pangolin.interface.interface.matmul": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.VMap": {"tf": 1}, "pangolin.ir.vmap.VMap": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1.4142135623730951}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1.4142135623730951}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 7}, "g": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pangolin.interface.OperatorRV": {"tf": 1}, "pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.OperatorRV": {"tf": 1}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.interface.vmap.vmap_eval": {"tf": 1.4142135623730951}, "pangolin.ir": {"tf": 1}, "pangolin.ir.RV": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.rv.RV": {"tf": 1}}, "df": 12}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.interface.vmap.AbstractOp": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 1}}, "df": 7}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.Loop": {"tf": 1}, "pangolin.interface.vmap.vmap_dummy_args": {"tf": 1}, "pangolin.interface.vmap.vmap_subgraph": {"tf": 1}, "pangolin.ir.Op.get_shape": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.Composite": {"tf": 1}, "pangolin.ir.index": {"tf": 1.7320508075688772}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.op.Op.get_shape": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 10}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.index": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.vmap": {"tf": 1}, "pangolin.interface.vmap": {"tf": 1}, "pangolin.interface.vmap.vmap": {"tf": 1}, "pangolin.ir.VMap.__init__": {"tf": 1}, "pangolin.ir.vmap.VMap.__init__": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pangolin.interface.uniform": {"tf": 1}, "pangolin.interface.interface.uniform": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 7, "d": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1}, "pangolin.inference.numpyro.sample": {"tf": 1}, "pangolin.ir.Op.__init__": {"tf": 1}, "pangolin.ir.Composite.__init__": {"tf": 1}, "pangolin.ir.multivariate_dists.VecMatOp.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.MatMul.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Inv.__init__": {"tf": 1}, "pangolin.ir.multivariate_funs.Softmax.__init__": {"tf": 1}, "pangolin.ir.op.Op.__init__": {"tf": 1}, "pangolin.ir.scalar_ops.all_scalar_op_factory": {"tf": 1}}, "df": 10}, "r": {"docs": {"pangolin.ir.index": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1}}, "df": 2, "s": {"docs": {"pangolin.interface.makerv": {"tf": 1}, "pangolin.interface.interface.makerv": {"tf": 1}}, "df": 2}, "\u2014": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.vmap.generated_nodes_old": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1.7320508075688772}, "pangolin.inference.numpyro.sample": {"tf": 1.7320508075688772}, "pangolin.interface.sum": {"tf": 1}, "pangolin.interface.autoregressive.repeat": {"tf": 1}, "pangolin.interface.interface.standard_makerv": {"tf": 1}, "pangolin.interface.interface.sqrt": {"tf": 1.4142135623730951}, "pangolin.interface.interface.sum": {"tf": 1}, "pangolin.interface.vmap.plate": {"tf": 2.449489742783178}, "pangolin.ir.index": {"tf": 2.8284271247461903}, "pangolin.ir.scalar_ops": {"tf": 2}}, "df": 10, "[": {"3": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "[": {"3": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "y": {"docs": {"pangolin.inference.inference_util.Calculate.sample": {"tf": 1.4142135623730951}, "pangolin.inference.numpyro.sample": {"tf": 1.4142135623730951}, "pangolin.ir.index": {"tf": 2}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1.7320508075688772}, "pangolin.interface.interface.rv_factory": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1.7320508075688772}, "pangolin.ir.Constant": {"tf": 1}, "pangolin.ir.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.constant.Constant": {"tf": 1}, "pangolin.ir.index": {"tf": 2.23606797749979}, "pangolin.ir.index.Index.advanced_at_start": {"tf": 1}, "pangolin.ir.scalar_ops": {"tf": 1.7320508075688772}}, "df": 9}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pangolin.interface.beta_binomial": {"tf": 1}, "pangolin.interface.interface.beta_binomial": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {"pangolin.interface.vmap.plate": {"tf": 4.47213595499958}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pangolin.ir.index": {"tf": 1}}, "df": 1}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();